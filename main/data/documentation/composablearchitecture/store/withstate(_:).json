{"metadata":{"title":"withState(_:)","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:22ComposableArchitecture5StoreC9withStateyqd__qd__xXElF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withState"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"role":"symbol","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withState"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes the current state of the store as its sole argument. If","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the closure has a return value, that value is also used as the return value of the"},{"type":"text","text":" "},{"code":"withState","type":"codeVoice"},{"type":"text","text":" method. The state argument reflects the current state of the store only for the"},{"type":"text","text":" "},{"type":"text","text":"duration of the closureâ€™s execution, and is only observable over time, "},{"inlineContent":[{"type":"text","text":"e.g."}],"type":"emphasis"},{"type":"text","text":" by SwiftUI, if"},{"type":"text","text":" "},{"type":"text","text":"it conforms to "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","type":"reference"},{"type":"text","text":"."}]}],"name":"body"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The return value, if any, of the ","type":"text"},{"type":"codeVoice","code":"body"},{"text":" closure.","type":"text"}]}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A lightweight way of accessing store state when state is not observable and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl"},{"type":"text","text":" is"},{"text":" ","type":"text"},{"text":"unavailable.","type":"text"}]}],"kind":"content"}],"kind":"symbol","sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef"],"generated":true,"title":"Accessing state","anchor":"Accessing-state"}],"abstract":[{"type":"text","text":"Calls the given closure with a snapshot of the current state of the store."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/store\/withstate(_:)"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/withState(_:)":{"kind":"symbol","title":"withState(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"withState","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Calls the given closure with a snapshot of the current state of the store."}],"url":"\/documentation\/composablearchitecture\/store\/withstate(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/subscript(dynamicMember:)-655ef":{"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableState"},{"type":"text","text":"."}]},"type":"topic","title":"subscript(dynamicMember:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef","url":"\/documentation\/composablearchitecture\/store\/subscript(dynamicmember:)-655ef","fragments":[{"text":"subscript","kind":"keyword"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"kind":"text","text":" _: "},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"type":"topic","title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Store"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Store","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/state-1qxwl":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableState"},{"text":".","type":"text"}]},"kind":"symbol","title":"state","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"kind":"text","text":": "},{"text":"State","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Direct access to state in the store when "},{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState"},{"text":".","type":"text"}],"url":"\/documentation\/composablearchitecture\/store\/state-1qxwl"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"url":"\/documentation\/composablearchitecture\/observablestate","type":"topic","title":"ObservableState","abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","navigatorTitle":[{"kind":"identifier","text":"ObservableState"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}