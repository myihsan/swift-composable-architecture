{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"load"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"LoadContext","preciseIdentifier":"s:7Sharing11LoadContextO"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"continuation"},{"kind":"text","text":": "},{"text":"LoadContinuation","kind":"typeIdentifier","preciseIdentifier":"s:7Sharing16LoadContinuationV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">)","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"sections":[],"kind":"symbol","metadata":{"externalID":"s:22ComposableArchitecture017AppStorageKeyPathE0V4load7context12continuationy7Sharing11LoadContextOyxG_AG0K12ContinuationVyxGtF","roleHeading":"Instance Method","extendedModule":"ComposableArchitecture","symbolKind":"method","modules":[{"name":"ComposableArchitecture"}],"platforms":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"LoadContext","kind":"typeIdentifier","preciseIdentifier":"s:7Sharing11LoadContextO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"continuation"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Sharing16LoadContinuationV","text":"LoadContinuation"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">)","kind":"text"}],"title":"load(context:continuation:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/load(context:continuation:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/SharedReaderKey-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use an 'AppStorageKey', instead","type":"text"}]}],"abstract":[{"type":"text","text":"Inherited from "},{"code":"SharedReaderKey.load(context:continuation:)","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/appstoragekeypathkey\/load(context:continuation:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey/load(context:continuation:)":{"url":"\/documentation\/composablearchitecture\/appstoragekeypathkey\/load(context:continuation:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/load(context:continuation:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Sharing11LoadContextO","text":"LoadContext","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"continuation"},{"text":": ","kind":"text"},{"text":"LoadContinuation","kind":"typeIdentifier","preciseIdentifier":"s:7Sharing16LoadContinuationV"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"load(context:continuation:)","role":"symbol","kind":"symbol","abstract":[],"deprecated":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey/SharedReaderKey-Implementations":{"type":"topic","title":"SharedReaderKey Implementations","url":"\/documentation\/composablearchitecture\/appstoragekeypathkey\/sharedreaderkey-implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/SharedReaderKey-Implementations","abstract":[],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"type":"topic","title":"AppStorageKeyPathKey","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppStorageKeyPathKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/appstoragekeypathkey","role":"symbol","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy via key path."}],"kind":"symbol","navigatorTitle":[{"text":"AppStorageKeyPathKey","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}