{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture25ObservationStateRegistrarV6access_7keyPathyx_s03KeyH0Cyxq_Gt0C010ObservableRzr0_lF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"access","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Subject"},{"kind":"text","text":", "},{"text":"Member","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyPath"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"text":", ","kind":"text"},{"text":"Member","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"title":"access(_:keyPath:)","extendedModule":"ComposableArchitecture","roleHeading":"Instance Method","role":"symbol","platforms":[{"deprecated":false,"name":"iOS","unavailable":false,"beta":false,"introducedAt":"17.0"},{"name":"macOS","beta":false,"unavailable":false,"introducedAt":"14.0","deprecated":false},{"deprecated":false,"unavailable":false,"introducedAt":"17.0","name":"tvOS","beta":false},{"deprecated":false,"introducedAt":"10.0","name":"watchOS","beta":false,"unavailable":false}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/access(_:keyPath:)-9guon"},"kind":"symbol","variants":[{"paths":["\/documentation\/composablearchitecture\/observationstateregistrar\/access(_:keypath:)-9guon"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Registers access to a specific property for observation.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"access"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Subject"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Member"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"subject"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"keyPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Member","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Subject","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11Observation10ObservableP","text":"Observable","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"subject","content":[{"inlineContent":[{"type":"text","text":"An instance of an observable type."}],"type":"paragraph"}]},{"name":"keyPath","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The key path of an observed property."}]}]}],"kind":"parameters"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","title":"Reducer","url":"\/documentation\/composablearchitecture\/reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"title":"Effect","role":"symbol","abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"title":"State","url":"\/documentation\/composablearchitecture\/reducer\/state","type":"topic","required":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar/access(_:keyPath:)-9guon":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"access","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Subject","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Member"},{"kind":"text","text":">("},{"text":"Subject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keyPath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Member"},{"kind":"text","text":">)"}],"url":"\/documentation\/composablearchitecture\/observationstateregistrar\/access(_:keypath:)-9guon","role":"symbol","title":"access(_:keyPath:)","kind":"symbol","abstract":[{"type":"text","text":"Registers access to a specific property for observation."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/access(_:keyPath:)-9guon","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar":{"type":"topic","abstract":[{"text":"Provides storage for tracking and access to data changes.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar","role":"symbol","title":"ObservationStateRegistrar","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservationStateRegistrar","kind":"identifier"}],"navigatorTitle":[{"text":"ObservationStateRegistrar","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/observationstateregistrar"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"role":"symbol","abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"title":"ObservableState()","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservableState","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","url":"\/documentation\/composablearchitecture\/observablestate()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}