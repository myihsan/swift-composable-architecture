{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/mutate(_:keyPath:_:_:_:)-2w75m"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"mutate","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Subject","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Member","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"subject"},{"kind":"text","text":": "},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"keyPath","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"text":", ","kind":"text"},{"text":"Member","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"newValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"isIdentityEqual","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Observation10ObservableP","text":"Observable"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance of an observable type."}]}],"name":"subject"},{"name":"keyPath","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The key path of an observed property."}]}]},{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value being mutated."}]}]},{"name":"newValue","content":[{"type":"paragraph","inlineContent":[{"text":"The new value to mutate with.","type":"text"}]}]},{"name":"isIdentityEqual","content":[{"inlineContent":[{"text":"A comparison function that determines whether two values have the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"same identity or not."}],"type":"paragraph"}]}],"kind":"parameters"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"]]},"kind":"symbol","abstract":[{"text":"Mutates a value to a new value, and decided to notify observers based on the identity of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the value."}],"metadata":{"extendedModule":"ComposableArchitecture","externalID":"s:22ComposableArchitecture25ObservationStateRegistrarV6mutate_7keyPath___yx_s03KeyH0Cyxq_Gq0_zq0_Sbq0__q0_tXEt0C010ObservableRzr1_lF","roleHeading":"Instance Method","symbolKind":"method","title":"mutate(_:keyPath:_:_:_:)","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"mutate","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Subject"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Member"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"keyPath","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"kind":"text","text":"<"},{"text":"Subject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Member"},{"kind":"text","text":">, "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"platforms":[{"name":"iOS","beta":false,"unavailable":false,"deprecated":false,"introducedAt":"17.0"},{"name":"macOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"14.0"},{"deprecated":false,"beta":false,"name":"tvOS","unavailable":false,"introducedAt":"17.0"},{"beta":false,"unavailable":false,"name":"watchOS","introducedAt":"10.0","deprecated":false}]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/observationstateregistrar\/mutate(_:keypath:_:_:_:)-2w75m"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"role":"symbol","abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"title":"ObservableState()","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservableState","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","url":"\/documentation\/composablearchitecture\/observablestate()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"title":"State","url":"\/documentation\/composablearchitecture\/reducer\/state","type":"topic","required":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","title":"Reducer","url":"\/documentation\/composablearchitecture\/reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"title":"Effect","role":"symbol","abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar/mutate(_:keyPath:_:_:_:)-2w75m":{"type":"topic","title":"mutate(_:keyPath:_:_:_:)","abstract":[{"type":"text","text":"Mutates a value to a new value, and decided to notify observers based on the identity of"},{"text":" ","type":"text"},{"type":"text","text":"the value."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"mutate","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Subject","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Member"},{"kind":"text","text":", "},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keyPath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":", "},{"text":"Member","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/mutate(_:keyPath:_:_:_:)-2w75m","url":"\/documentation\/composablearchitecture\/observationstateregistrar\/mutate(_:keypath:_:_:_:)-2w75m","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar":{"type":"topic","abstract":[{"text":"Provides storage for tracking and access to data changes.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar","role":"symbol","title":"ObservationStateRegistrar","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservationStateRegistrar","kind":"identifier"}],"navigatorTitle":[{"text":"ObservationStateRegistrar","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/observationstateregistrar"}}}