{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.chartYAxis(content:)"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartyaxis(content:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"extendedModule":"SwiftUICore","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartYAxis","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Content"},{"text":">(","kind":"text"},{"text":"content","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Content"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"title":"chartYAxis(content:)","externalID":"s:7SwiftUI4ViewP6ChartsE10chartYAxis7contentQrqd__yXE_tAD11AxisContentRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","symbolKind":"method","platforms":[{"beta":false,"introducedAt":"16.0","deprecated":false,"name":"iOS","unavailable":false},{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0","name":"macOS"},{"unavailable":false,"name":"tvOS","deprecated":false,"introducedAt":"16.0","beta":false},{"unavailable":false,"beta":false,"name":"watchOS","deprecated":false,"introducedAt":"9.0"}]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartYAxis(content:)","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"chartYAxis","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Content","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"@","kind":"attribute"},{"kind":"attribute","text":"AxisContentBuilder","preciseIdentifier":"s:6Charts18AxisContentBuilderV"},{"text":" ","kind":"text"},{"kind":"externalParam","text":"content"},{"text":": () -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Content","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:6Charts11AxisContentP","kind":"typeIdentifier","text":"AxisContent"},{"kind":"text","text":"\n"}]}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"title":"IfLetStore","role":"symbol","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"kind":"symbol","deprecated":true,"type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"title":"View Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartYAxis(content:)":{"url":"\/documentation\/composablearchitecture\/ifletstore\/chartyaxis(content:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartYAxis","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Content"},{"kind":"text","text":">("},{"kind":"externalParam","text":"content"},{"kind":"text","text":": () -> "},{"text":"Content","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[],"kind":"symbol","title":"chartYAxis(content:)","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartYAxis(content:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations"}}}