{"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.contextMenu(forSelectionType:menu:primaryAction:)","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/contextmenu(forselectiontype:menu:primaryaction:)"]}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"nonisolated"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"contextMenu"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"M","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"forSelectionType"},{"text":" ","kind":"text"},{"text":"itemType","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"text":".Type = I.self, ","kind":"text"},{"text":"@","kind":"attribute"},{"text":"ViewBuilder","preciseIdentifier":"s:7SwiftUI11ViewBuilderV","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"externalParam","text":"menu"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"primaryAction","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"I"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")? = nil) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"M"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/contextMenu(forSelectionType:menu:primaryAction:)"},"metadata":{"modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"externalID":"s:7SwiftUI4ViewPAAE11contextMenu16forSelectionType4menu13primaryActionQrqd__m_qd_0_Shyqd__GcyAHcSgtSHRd__AaBRd_0_r0_lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contextMenu","kind":"identifier"},{"kind":"text","text":"<"},{"text":"I","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"M","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"forSelectionType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"menu"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:Sh","text":"Set","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"M","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"primaryAction"},{"text":": ((","kind":"text"},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")?) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"title":"contextMenu(forSelectionType:menu:primaryAction:)","platforms":[{"introducedAt":"16.0","unavailable":false,"deprecated":false,"name":"iOS","beta":false},{"deprecated":false,"name":"macOS","introducedAt":"13.0","beta":false,"unavailable":false}],"extendedModule":"SwiftUICore","roleHeading":"Instance Method","role":"symbol"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"title":"IfLetStore","role":"symbol","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"kind":"symbol","deprecated":true,"type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"title":"View Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/contextMenu(forSelectionType:menu:primaryAction:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/contextMenu(forSelectionType:menu:primaryAction:)","title":"contextMenu(forSelectionType:menu:primaryAction:)","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore\/contextmenu(forselectiontype:menu:primaryaction:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"contextMenu","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"I"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"M"},{"kind":"text","text":">("},{"kind":"externalParam","text":"forSelectionType"},{"kind":"text","text":": "},{"text":"I","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"menu","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"kind":"text","text":"<"},{"text":"I","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"M","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"primaryAction"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")?) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations"}}}