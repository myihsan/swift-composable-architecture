{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/combinereducers"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Combines multiple reducers into a single reducer."}],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/init(_:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/reduce(into:action:)"]},{"title":"Default Implementations","generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/Reducer-Implementations"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"]]},"metadata":{"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Structure","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CombineReducers","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CombineReducers"}],"title":"CombineReducers","externalID":"s:22ComposableArchitecture15CombineReducersV","symbolKind":"struct"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"],"title":"Conforms To"}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder"],"title":"Composing reducers","generated":true,"anchor":"Composing-reducers"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CombineReducers"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Reducers","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Reducers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"Reducers"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"text":", ","kind":"text"},{"text":"Reducers","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier"}]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"code":"CombineReducers","type":"codeVoice"},{"type":"text","text":" takes a block that can combine a number of reducers using a"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","type":"reference","isActive":true},{"type":"text","text":"."}]},{"inlineContent":[{"text":"Useful for grouping reducers together and applying reducer modifiers to the result.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["var body: some Reducer<State, Action> {","  CombineReducers {","    ReducerA()","    ReducerB()","    ReducerC()","  }","  ._printChanges()","}"]}],"kind":"content"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"title":"ReducerBuilder","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","abstract":[{"type":"text","text":"A result builder for combining reducers into a single reducer by running each, one after the"},{"text":" ","type":"text"},{"type":"text","text":"other, and merging their effects."}],"url":"\/documentation\/composablearchitecture\/reducerbuilder","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReducerBuilder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ReducerBuilder"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers/Reducer-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/Reducer-Implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"Reducer Implementations","kind":"article","url":"\/documentation\/composablearchitecture\/combinereducers\/reducer-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","title":"Reducer","url":"\/documentation\/composablearchitecture\/reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers/reduce(into:action:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/reduce(into:action:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reduce"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Reducers"},{"kind":"text","text":"."},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Reducers","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture6EffectV","kind":"typeIdentifier","text":"Effect"},{"text":"<","kind":"text"},{"text":"Reducers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/composablearchitecture\/combinereducers\/reduce(into:action:)","title":"reduce(into:action:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers":{"url":"\/documentation\/composablearchitecture\/combinereducers","title":"CombineReducers","abstract":[{"type":"text","text":"Combines multiple reducers into a single reducer."}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CombineReducers","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","navigatorTitle":[{"kind":"identifier","text":"CombineReducers"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"title":"State","url":"\/documentation\/composablearchitecture\/reducer\/state","type":"topic","required":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/Action":{"url":"\/documentation\/composablearchitecture\/reducer\/action","title":"Action","abstract":[{"type":"text","text":"A type that holds all possible actions that cause the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","type":"reference","isActive":true},{"type":"text","text":" of the reducer to change"},{"type":"text","text":" "},{"text":"and\/or kick off a side ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"text":" that can communicate with the outside world.","type":"text"}],"type":"topic","required":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Action","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"title":"Effect","role":"symbol","abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers/init(_:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Reducers"},{"text":")","kind":"text"}],"title":"init(_:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/init(_:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/combinereducers\/init(_:)","abstract":[{"type":"text","text":"Initializes a reducer that combines all of the reducers in the given build block."}],"role":"symbol"}}}