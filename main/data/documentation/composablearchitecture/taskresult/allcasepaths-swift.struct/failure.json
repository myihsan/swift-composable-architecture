{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"failure","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"failure"},{"kind":"text","text":": "},{"text":"AnyCasePath","preciseIdentifier":"s:9CasePaths03AnyA4PathV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:22ComposableArchitecture10TaskResultO","text":"TaskResult","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"text":">, any ","kind":"text"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">"}],"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture10TaskResultO12AllCasePathsV7failure0fG003AnyF4PathVyACyxGs5Error_pGvp","symbolKind":"property","role":"symbol","roleHeading":"Instance Property"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/CasePathable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/CasePathable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct"]]},"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct\/failure"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"failure"},{"kind":"text","text":": "},{"text":"AnyCasePath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths03AnyA4PathV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO","text":"TaskResult"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">, any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct\/failure"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/AllCasePaths-swift.struct/failure":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct\/failure","title":"failure","abstract":[],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"failure","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths03AnyA4PathV","text":"AnyCasePath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"TaskResult","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"text":">, any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct\/failure","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/CasePathable-Implementations":{"url":"\/documentation\/composablearchitecture\/taskresult\/casepathable-implementations","type":"topic","title":"CasePathable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/CasePathable-Implementations","kind":"article","abstract":[],"role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult":{"abstract":[{"type":"text","text":"A value that represents either a success or a failure. This type differs from Swiftâ€™s "},{"code":"Result","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"type in that it uses only one generic for the success case, leaving the failure case as an"},{"type":"text","text":" "},{"text":"untyped ","type":"text"},{"type":"codeVoice","code":"Error"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"TaskResult"}],"deprecated":true,"url":"\/documentation\/composablearchitecture\/taskresult","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","type":"topic","title":"TaskResult","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskResult"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"title":"Effect","role":"symbol","abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/AllCasePaths-swift.struct":{"url":"\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct","type":"topic","title":"TaskResult.AllCasePaths","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"AllCasePaths","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AllCasePaths","kind":"identifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Success"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","title":"Reducer","url":"\/documentation\/composablearchitecture\/reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}