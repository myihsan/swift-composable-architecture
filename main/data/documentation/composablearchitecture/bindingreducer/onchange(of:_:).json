{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/bindingreducer\/onchange(of:_:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"symbol","roleHeading":"Instance Method","extendedModule":"ComposableArchitecture","title":"onChange(of:_:)","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture7ReducerPAAE8onChange2of_AA03_OneC0Vyxqd__qd_0_Gqd__5StateQzc_qd_0_qd___qd__tctSQRd__AaBRd_0_6ActionQyd_0_AKRtzAIQyd_0_AJRSr0_lF::SYNTHESIZED::s:22ComposableArchitecture14BindingReducerV","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", ("},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"text":"_OnChangeReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":">","kind":"text"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/onChange(of:_:)"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/Reducer-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/Reducer-Implementations"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":" "},{"text":"toValue","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"State","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"V"},{"text":", ","kind":"text"},{"text":"@","kind":"attribute"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","text":"ReducerBuilder","preciseIdentifier":"s:22ComposableArchitecture14ReducerBuilderO","kind":"attribute"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":">","kind":"text"},{"kind":"text","text":" "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"reducer"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_OnChangeReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SQ","text":"Equatable"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"text":"Reducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier","text":"Action"},{"text":" == ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"State","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":" == ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that returns a value from the given state."}]}],"name":"toValue"},{"name":"reducer","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A reducer builder closure to run when the value changes."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"oldValue","type":"codeVoice"},{"text":": The old value that failed the comparison check.","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"newValue","type":"codeVoice"},{"type":"text","text":": The new value that failed the comparison check."}],"type":"paragraph"}]}]}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A reducer that performs the logic when the state changes."}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"style":"important","type":"aside","name":"Important","content":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"onChange"},{"type":"text","text":" operator is only capable of detecting changes made by the reducer"},{"type":"text","text":" "},{"type":"text","text":"it is directly attached to. It does not observe changes that are made from other actions,"},{"text":" ","type":"text"},{"type":"text","text":"such as parent actions."}],"type":"paragraph"}]},{"inlineContent":[{"text":"Use this operator to trigger additional logic when a value changes, like when a","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer"},{"type":"text","text":" makes a deeper change to a struct held in "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["@Reducer","struct Settings {","  struct State {","    @BindingState var userSettings: UserSettings","    \/\/ ...","  }","","  enum Action: BindableAction {","    case binding(BindingAction<State>)","    \/\/ ...","  }","","  var body: some Reducer<State, Action> {","    BindingReducer()","      .onChange(of: \\.userSettings.isHapticFeedbackEnabled) { oldValue, newValue in","        Reduce { state, action in","          .run { send in","            \/\/ Persist new value...","          }","        }","      }","  }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"When the value changes, the new version of the closure will be called, so any captured values","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"will have their values from the time that the observed value has its new value. The system"},{"type":"text","text":" "},{"text":"passes the old and new observed values into the closure.","type":"text"}],"type":"paragraph"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Take care when applying ","type":"text"},{"type":"codeVoice","code":"onChange(of:)"},{"type":"text","text":" to a reducer, as it adds an equatable check"},{"type":"text","text":" "},{"text":"for every action fed into it. Prefer applying it to leaf nodes, like ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer"},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"against values that are quick to equate.","type":"text"}]}],"type":"aside","name":"Note"}]}],"sections":[],"abstract":[{"text":"Adds a reducer to run when this reducer changes the given value in state.","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","title":"Reducer","url":"\/documentation\/composablearchitecture\/reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/onChange(of:_:)":{"role":"symbol","abstract":[{"type":"text","text":"Adds a reducer to run when this reducer changes the given value in state."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onChange","kind":"identifier"},{"kind":"text","text":"<"},{"text":"V","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"kind":"text","text":") -> "},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"V"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"},{"text":") -> ","kind":"text"},{"text":"_OnChangeReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/onChange(of:_:)","title":"onChange(of:_:)","url":"\/documentation\/composablearchitecture\/bindingreducer\/onchange(of:_:)","type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","title":"BindingState","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingState"}],"kind":"symbol","role":"symbol","deprecated":true,"type":"topic","url":"\/documentation\/composablearchitecture\/bindingstate","abstract":[{"text":"A property wrapper type that can designate properties of app state that can be directly bindable","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in SwiftUI views."}],"navigatorTitle":[{"kind":"identifier","text":"BindingState"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"title":"ReducerBuilder","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","abstract":[{"type":"text","text":"A result builder for combining reducers into a single reducer by running each, one after the"},{"text":" ","type":"text"},{"type":"text","text":"other, and merging their effects."}],"url":"\/documentation\/composablearchitecture\/reducerbuilder","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReducerBuilder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ReducerBuilder"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"title":"State","url":"\/documentation\/composablearchitecture\/reducer\/state","type":"topic","required":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/Action":{"url":"\/documentation\/composablearchitecture\/reducer\/action","title":"Action","abstract":[{"type":"text","text":"A type that holds all possible actions that cause the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","type":"reference","isActive":true},{"type":"text","text":" of the reducer to change"},{"type":"text","text":" "},{"text":"and\/or kick off a side ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"text":" that can communicate with the outside world.","type":"text"}],"type":"topic","required":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Action","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"title":"Effect","role":"symbol","abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"role":"symbol","navigatorTitle":[{"text":"BindingReducer","kind":"identifier"}],"abstract":[{"text":"A reducer that updates bindable state when it receives binding actions.","type":"text"}],"title":"BindingReducer","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingReducer","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/bindingreducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/Reducer-Implementations":{"kind":"article","type":"topic","title":"Reducer Implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/Reducer-Implementations","url":"\/documentation\/composablearchitecture\/bindingreducer\/reducer-implementations","abstract":[]}}}