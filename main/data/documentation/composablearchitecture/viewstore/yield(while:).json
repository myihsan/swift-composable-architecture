{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"yield"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"predicate"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"inlineContent":[{"text":"A predicate on ","type":"text"},{"type":"codeVoice","code":"ViewState"},{"type":"text","text":" that determines for how long this method"},{"type":"text","text":" "},{"type":"text","text":"should suspend."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"If you want to suspend at the same time you send an action to the view store, use","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:while:)"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"symbol","sections":[],"abstract":[{"text":"Suspends the current task while a predicate on state is ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"]]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:while:)"],"anchor":"Sending-actions","title":"Sending actions"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/yield(while:)"},"metadata":{"title":"yield(while:)","platforms":[],"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"yield"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"externalID":"s:22ComposableArchitecture9ViewStoreC5yield5whileySbxc_tYaF"},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/composablearchitecture\/viewstore\/yield(while:)"],"traits":[{"interfaceLanguage":"swift"}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use '@ObservableState', instead. See the following migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Using-ObservableState","type":"text"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:while:)":{"url":"\/documentation\/composablearchitecture\/viewstore\/send(_:while:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:while:)","abstract":[{"text":"Sends an action into the store and then suspends while a piece of state is ","type":"text"},{"type":"codeVoice","code":"true"},{"text":".","type":"text"}],"kind":"symbol","title":"send(_:while:)","role":"symbol","deprecated":true,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewState"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:)":{"deprecated":true,"url":"\/documentation\/composablearchitecture\/viewstore\/send(_:)","type":"topic","title":"send(_:)","abstract":[{"type":"text","text":"Sends an action to the store."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ViewAction"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","text":"StoreTask"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ViewStore","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/viewstore","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"abstract":[{"text":"A ","type":"text"},{"code":"ViewStore","type":"codeVoice"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"deprecated":true,"title":"ViewStore","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/yield(while:)":{"abstract":[{"text":"Suspends the current task while a predicate on state is ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"title":"yield(while:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/yield(while:)","kind":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/viewstore\/yield(while:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"yield","kind":"identifier"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}]}}}