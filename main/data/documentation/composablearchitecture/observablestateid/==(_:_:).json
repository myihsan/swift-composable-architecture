{"metadata":{"symbolKind":"op","roleHeading":"Operator","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"ObservableStateID","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV"},{"text":", ","kind":"text"},{"text":"ObservableStateID","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","modules":[{"name":"ComposableArchitecture"}],"title":"==(_:_:)","externalID":"s:22ComposableArchitecture17ObservableStateIDV2eeoiySbAC_ACtFZ"},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/observablestateid\/==(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"Equatable.==(_:_:)","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/==(_:_:)"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","text":"ObservableStateID","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV","text":"ObservableStateID","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","title":"Reducer","url":"\/documentation\/composablearchitecture\/reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID/==(_:_:)":{"url":"\/documentation\/composablearchitecture\/observablestateid\/==(_:_:)","role":"symbol","abstract":[],"kind":"symbol","title":"==(_:_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/==(_:_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"=="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"ObservableStateID","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ObservableStateID","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"title":"Effect","role":"symbol","abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableStateID"}],"abstract":[{"text":"A unique identifier for a observed value.","type":"text"}],"title":"ObservableStateID","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ObservableStateID","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/observablestateid"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"title":"State","url":"\/documentation\/composablearchitecture\/reducer\/state","type":"topic","required":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"role":"symbol","abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"title":"ObservableState()","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObservableState","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","url":"\/documentation\/composablearchitecture\/observablestate()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}