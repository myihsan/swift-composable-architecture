{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.onChange(of:perform:)"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"externalID":"s:7SwiftUI4ViewPAAE8onChange2of7performQrqd___yqd__ctSQRd__lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","symbolKind":"method","title":"onChange(of:perform:)","platforms":[{"unavailable":false,"deprecated":false,"beta":false,"message":"Use `onChange` with a two or zero parameter action closure instead.","introducedAt":"14.0","name":"iOS","deprecatedAt":"17.0"},{"name":"macOS","beta":false,"unavailable":false,"message":"Use `onChange` with a two or zero parameter action closure instead.","deprecatedAt":"14.0","introducedAt":"11.0","deprecated":false},{"message":"Use `onChange` with a two or zero parameter action closure instead.","beta":false,"introducedAt":"14.0","name":"tvOS","unavailable":false,"deprecatedAt":"17.0","deprecated":false},{"unavailable":false,"deprecatedAt":"10.0","deprecated":false,"message":"Use `onChange` with a two or zero parameter action closure instead.","introducedAt":"7.0","name":"watchOS","beta":false}],"role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"text":", ","kind":"text"},{"text":"perform","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"extendedModule":"SwiftUICore"},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use `onChange` with a two or zero parameter action closure instead."}],"type":"paragraph"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/onchange(of:perform:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"perform"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SQ","text":"Equatable"},{"kind":"text","text":"\n"}],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/onChange(of:perform:)","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/onChange(of:perform:)":{"abstract":[],"title":"onChange(of:perform:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/onChange(of:perform:)","kind":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/caselet\/onchange(of:perform:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"text":"V","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"text":", ","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"title":"View Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"role":"symbol","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}],"navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/switchstore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","deprecated":true,"kind":"symbol","title":"SwitchStore","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"url":"\/documentation\/composablearchitecture\/caselet","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"}],"navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"deprecated":true,"role":"symbol","title":"CaseLet"}}}