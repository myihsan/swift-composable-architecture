{"metadata":{"extendedModule":"SwiftUICore","title":"matchedTransitionSource(id:in:configuration:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"matchedTransitionSource"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"id"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"text":", ","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI9NamespaceV","text":"Namespace","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9NamespaceV2IDV","text":"ID"},{"kind":"text","text":", "},{"text":"configuration","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:7SwiftUI41EmptyMatchedTransitionSourceConfigurationV","kind":"typeIdentifier","text":"EmptyMatchedTransitionSourceConfiguration"},{"text":") -> some ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI36MatchedTransitionSourceConfigurationP","kind":"typeIdentifier","text":"MatchedTransitionSourceConfiguration"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"externalID":"s:7SwiftUI4ViewPAAE23matchedTransitionSource2id2in13configurationQrqd___AA9NamespaceV2IDVqd_0_AA012EmptyMatchedeF13ConfigurationVXEtSHRd__AA0mefN0Rd_0_r0_lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","platforms":[{"deprecated":false,"unavailable":false,"name":"iOS","beta":false,"introducedAt":"18.0"},{"deprecated":false,"beta":false,"introducedAt":"15.0","unavailable":false,"name":"macOS"},{"unavailable":false,"beta":false,"name":"tvOS","deprecated":false,"introducedAt":"18.0"},{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"2.0","name":"visionOS"},{"name":"watchOS","introducedAt":"11.0","unavailable":false,"beta":false,"deprecated":false}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/matchedTransitionSource(id:in:configuration:)"},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/matchedtransitionsource(id:in:configuration:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.matchedTransitionSource(id:in:configuration:)"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"matchedTransitionSource"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"in","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"namespace","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Namespace","preciseIdentifier":"s:7SwiftUI9NamespaceV"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:7SwiftUI9NamespaceV2IDV"},{"kind":"text","text":", "},{"text":"configuration","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"EmptyMatchedTransitionSourceConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI41EmptyMatchedTransitionSourceConfigurationV"},{"text":") -> some ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI36MatchedTransitionSourceConfigurationP","kind":"typeIdentifier","text":"MatchedTransitionSourceConfiguration"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}]}],"kind":"declarations"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"url":"\/documentation\/composablearchitecture\/caselet","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"}],"navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"deprecated":true,"role":"symbol","title":"CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"title":"View Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/matchedTransitionSource(id:in:configuration:)":{"abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"matchedTransitionSource","kind":"identifier"},{"kind":"text","text":"("},{"text":"id","kind":"externalParam"},{"kind":"text","text":": some "},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"text":"Namespace","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9NamespaceV"},{"text":".","kind":"text"},{"text":"ID","preciseIdentifier":"s:7SwiftUI9NamespaceV2IDV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"configuration","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:7SwiftUI41EmptyMatchedTransitionSourceConfigurationV","text":"EmptyMatchedTransitionSourceConfiguration","kind":"typeIdentifier"},{"kind":"text","text":") -> some "},{"preciseIdentifier":"s:7SwiftUI36MatchedTransitionSourceConfigurationP","kind":"typeIdentifier","text":"MatchedTransitionSourceConfiguration"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"title":"matchedTransitionSource(id:in:configuration:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/matchedTransitionSource(id:in:configuration:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/caselet\/matchedtransitionsource(id:in:configuration:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"role":"symbol","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}],"navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/switchstore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","deprecated":true,"kind":"symbol","title":"SwitchStore","type":"topic"}}}