{"primaryContentSections":[{"content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Composable Architecture is under constant development, and we are always looking for ways to"},{"type":"text","text":" "},{"text":"simplify the library, and make it more powerful. This version of the library only introduced new","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"APIs and did not deprecate any existing APIs. However, to make use of these tools your features"},{"text":" ","type":"text"},{"type":"text","text":"must already be integrated with the "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"reference"},{"text":" macro from version 1.4. See ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4"},{"text":" ","type":"text"},{"text":"for more information.","type":"text"}]},{"anchor":"Automatic-fulfillment-of-reducer-requirements","type":"heading","level":2,"text":"Automatic fulfillment of reducer requirements"},{"inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"text":" macro is now capable of automatically filling in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"type":"text","text":" protocol’s"},{"type":"text","text":" "},{"type":"text","text":"requirements for you. For example, even something as simple as this:"}],"type":"paragraph"},{"code":["@Reducer","struct Feature {","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"…now compiles."}]},{"inlineContent":[{"text":"The ","type":"text"},{"code":"@Reducer","type":"codeVoice"},{"type":"text","text":" macro will automatically insert an empty "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","type":"reference","isActive":true},{"type":"text","text":" struct, an empty"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","isActive":true,"type":"reference"},{"type":"text","text":" enum, and an empty "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t"},{"text":". This effectively means that","type":"text"},{"type":"text","text":" "},{"code":"Feature","type":"codeVoice"},{"type":"text","text":" is a logicless, behaviorless, inert reducer."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Having these requirements automatically fulfilled for you can be handy for slowly"},{"text":" ","type":"text"},{"text":"filling them in with their real implementations. For example, this ","type":"text"},{"type":"codeVoice","code":"Feature"},{"type":"text","text":" reducer could be"},{"type":"text","text":" "},{"text":"integrated in a parent domain using the library’s navigation tools, all without having implemented","type":"text"},{"type":"text","text":" "},{"text":"any of the domain yet. Then, once we are ready we can start implementing the real logic and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"behavior of the feature."}]},{"anchor":"Destination-and-path-reducers","type":"heading","level":2,"text":"Destination and path reducers"},{"inlineContent":[{"type":"text","text":"There is a common pattern in the Composable Architecture of representing destinations a feature"},{"type":"text","text":" "},{"type":"text","text":"can navigate to as a reducer that operates on enum state, with a case for each feature that can"},{"text":" ","type":"text"},{"type":"text","text":"be navigated to. This is explained in great detail in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation"},{"type":"text","text":" and"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","type":"reference"},{"type":"text","text":" articles."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This form of domain modeling can be very powerful, but also incur a bit of boilerplate. For example,"},{"text":" ","type":"text"},{"type":"text","text":"if a feature can navigate to 3 other features, then one might have a "},{"type":"codeVoice","code":"Destination"},{"type":"text","text":" reducer like"},{"type":"text","text":" "},{"type":"text","text":"the following:"}],"type":"paragraph"},{"code":["@Reducer","struct Destination {","  @ObservableState","  enum State {","    case add(FormFeature.State)","    case detail(DetailFeature.State)","    case edit(EditFeature.State)","  }","  enum Action {","    case add(FormFeature.Action)","    case detail(DetailFeature.Action)","    case edit(EditFeature.Action)  ","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.add, action: \\.add) {","      FormFeature()","    }","    Scope(state: \\.detail, action: \\.detail) {","      DetailFeature()","    }","    Scope(state: \\.edit, action: \\.edit) {","      EditFeature()","    }","  }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s not the worst code in the world, but it is 24 lines with a lot of repetition, and if we need"},{"type":"text","text":" "},{"text":"to add a new destination we must add a case to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","isActive":true},{"text":" enum, a case to the","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","isActive":true,"type":"reference"},{"type":"text","text":" enum, and a "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","type":"reference"},{"type":"text","text":" to the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","type":"reference","isActive":true},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true,"type":"reference"},{"type":"text","text":" macro is now capable of generating all of this code for you from the following"},{"text":" ","type":"text"},{"text":"simple declaration:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@Reducer","enum Destination {","  case add(FormFeature)","  case detail(DetailFeature)","  case edit(EditFeature) ","}"]},{"inlineContent":[{"type":"text","text":"24 lines of code has become 6. The "},{"code":"@Reducer","type":"codeVoice"},{"type":"text","text":" macro can now be applied to an "},{"type":"emphasis","inlineContent":[{"text":"enum","type":"text"}]},{"text":" where each","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"case holds onto the reducer that governs the logic and behavior for that case."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the parent feature has equatable state, you must extend the generated "},{"type":"codeVoice","code":"State"},{"text":" of the","type":"text"},{"type":"text","text":" "},{"text":"enum reducer to be ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" as well. Due to a bug in Swift 5.9 that prevents this from being"},{"text":" ","type":"text"},{"text":"done in the same file with an explicit extension, we provide the following configuration options,","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer(state:action:)","type":"reference","isActive":true},{"text":", instead, which can be told which synthesized conformances to apply:","type":"text"}]},{"code":["@Reducer(state: .equatable)"],"syntax":"swift","type":"codeListing"}],"style":"note","name":"Note","type":"aside"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Further, when using the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:)","type":"reference","isActive":true},{"type":"text","text":" operator with this style of "},{"type":"codeVoice","code":"Destination"},{"type":"text","text":" enum"},{"text":" ","type":"text"},{"type":"text","text":"reducer you can completely leave off the trailing closure as it can be automatically inferred:"}]},{"syntax":"diff","code":[" Reduce { state, action in","   \/\/ Core feature logic"," }","-.ifLet(\\.$destination, action: \\.destination) {","-   Destination()","-}","+.ifLet(\\.$destination, action: \\.destination)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The same simplifications can be made to "},{"type":"codeVoice","code":"Path"},{"type":"text","text":" reducers when using navigation stacks, as detailed"},{"type":"text","text":" "},{"type":"text","text":"in "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","type":"reference","isActive":true},{"type":"text","text":". However, there is an additional super power that comes with"},{"type":"text","text":" "},{"code":"@Reducer","type":"codeVoice"},{"type":"text","text":" to further simplify constructing navigation stacks."}]},{"inlineContent":[{"text":"Typically in stack-based applications you would model a single ","type":"text"},{"type":"codeVoice","code":"Path"},{"text":" reducer that encapsulates all","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the logic and behavior for each screen that can be pushed onto the stack. This can now be done"},{"type":"text","text":" "},{"text":"in a super concise syntax thanks to the new powers of ","type":"text"},{"code":"@Reducer","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"swift","code":["@Reducer","enum Path {","  case detail(DetailFeature)","  case meeting(MeetingFeature)","  case record(RecordFeature)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"And in this case you can now leave off the trailing closure of the"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)","isActive":true},{"type":"text","text":" operator:"}]},{"syntax":"diff","type":"codeListing","code":[" Reduce { state, action in","   \/\/ Core feature logic"," }","-.forEach(\\.path, action: \\.path) {","-   Path()","-}","+.forEach(\\.path, action: \\.path)"]},{"type":"paragraph","inlineContent":[{"text":"But there’s another part to path reducers that can also be simplified. When constructing the","type":"text"},{"type":"text","text":" "},{"code":"NavigationStack","type":"codeVoice"},{"text":" we need to specify a trailing closure that switches on the ","type":"text"},{"type":"codeVoice","code":"Path.State"},{"type":"text","text":" enum"},{"type":"text","text":" "},{"text":"and decides what view to drill-down to. Currently it can be quite verbose to do this:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["NavigationStack(path: $store.scope(state: \\.path, action: \\.path)) {","  \/\/ Root view","} destination: { store in","  switch store.state {","  case .detail:","    if let store = store.scope(state: \\.detail, action: \\.detail) {","      DetailView(store: store)","    }","  case .meeting:","    if let store = store.scope(state: \\.meeting, action: \\.meeting) {","      MeetingView(store: store)","    }","  case .record:","    if let store = store.scope(state: \\.record, action: \\.record) {","      RecordView(store: store)","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This requires a two-step process of first destructuring the "},{"type":"codeVoice","code":"Path.State"},{"type":"text","text":" enum to figure out which"},{"text":" ","type":"text"},{"type":"text","text":"case the state is in, and then further scoping the store down to a particular case of the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Path.State"},{"text":" enum. And since such extraction is failable, we have to ","type":"text"},{"code":"if let","type":"codeVoice"},{"type":"text","text":" unwrap the scoped"},{"text":" ","type":"text"},{"text":"store, and only then can we pass it to the child view being navigated to.","type":"text"}]},{"inlineContent":[{"text":"The new super powers of the ","type":"text"},{"type":"codeVoice","code":"@Reducer"},{"type":"text","text":" macro greatly improve this code. The macro adds a"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case","type":"reference"},{"text":" computed property to the store so that you can switch on the ","type":"text"},{"code":"Path.State","type":"codeVoice"},{"text":" enum ","type":"text"},{"inlineContent":[{"type":"text","text":"and"}],"type":"emphasis"},{"text":" ","type":"text"},{"type":"text","text":"extract out a store in one step:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["NavigationStack(path: $store.scope(state: \\.path, action: \\.path)) {","  \/\/ Root view","} destination: { store in","  switch store.case {","  case let .detail(store):","    DetailView(store: store)","  case let .meeting(store):","    MeetingView(store: store)","  case let .record(store):","    RecordView(store: store)","  }","}"]},{"inlineContent":[{"type":"text","text":"This is far simpler, and comes for free when using the "},{"type":"codeVoice","code":"@Reducer"},{"type":"text","text":" macro on your enum "},{"code":"Path","type":"codeVoice"},{"text":" ","type":"text"},{"text":"reducers.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/migratingto1.8"]}],"metadata":{"title":"Migrating to 1.8","roleHeading":"Article","modules":[{"name":"ComposableArchitecture"}],"role":"article"},"abstract":[{"type":"text","text":"Update your code to make use of the new capabilities of the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true,"type":"reference"},{"type":"text","text":" macro, including automatic"},{"type":"text","text":" "},{"type":"text","text":"fulfillment of requirements for destination reducers and path reducers."}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.19","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.18","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17.1","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/body-20w8t":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","title":"body","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Body","preciseIdentifier":"s:22ComposableArchitecture7ReducerP4BodyQa","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The content and behavior of a reducer that is composed from other reducers."}],"type":"topic","defaultImplementations":2,"required":true,"url":"\/documentation\/composablearchitecture\/reducer\/body-20w8t"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q":{"role":"symbol","abstract":[{"text":"Embeds a child reducer in a parent domain that works on an optional property of parent state.","type":"text"}],"title":"ifLet(_:action:destination:fileID:filePath:line:column:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ifLet"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":", "},{"text":"Destination","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","kind":"typeIdentifier","text":"PresentationAction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"destination"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Destination"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP","text":"Reducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">\n"}],"type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:destination:fileid:filepath:line:column:)-4ub6q"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.5":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.5","kind":"article","title":"Migrating to 1.5","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","role":"article","abstract":[{"type":"text","text":"Update your code to make use of the new "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","isActive":true},{"type":"text","text":" operation on "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" "},{"type":"text","text":"in order to improve the performance of your features and simplify the usage of navigation APIs."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.13":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.13","kind":"article","title":"Migrating to 1.13","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","role":"article","abstract":[{"type":"text","text":"The Composable Architecture now provides first class tools for building features in UIKit,"},{"type":"text","text":" "},{"type":"text","text":"including minimal state observation, presentation and stack navigation."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.6":{"url":"\/documentation\/composablearchitecture\/migratingto1.6","title":"Migrating to 1.6","type":"topic","abstract":[{"type":"text","text":"Update your code to make use of the new"},{"type":"text","text":" "},{"code":"TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x","type":"codeVoice"},{"type":"text","text":" method when you need to"},{"type":"text","text":" "},{"type":"text","text":"assert on the payload inside an action received."}],"role":"article","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb","title":"forEach(_:action:destination:fileID:filePath:line:column:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"forEach","kind":"identifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Destination","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10StackStateV","text":"StackState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":">>, "},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":", ","kind":"text"},{"text":"StackAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11StackActionO"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"destination","kind":"externalParam"},{"kind":"text","text":": () -> "},{"text":"Destination","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"filePath","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","text":"Reducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"kind":"text","text":">\n"}],"abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on elements of a navigation stack in"},{"type":"text","text":" "},{"text":"parent state.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:destination:fileid:filepath:line:column:)-9svqb","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"title":"State","url":"\/documentation\/composablearchitecture\/reducer\/state","type":"topic","required":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.19":{"abstract":[{"type":"text","text":"Store internals have been rewritten for performance and future features, and are now compatible with"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI’s "},{"code":"@StateObject","type":"codeVoice"},{"type":"text","text":" property wrapper."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.19","type":"topic","role":"article","title":"Migrating to 1.19","url":"\/documentation\/composablearchitecture\/migratingto1.19"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.9":{"title":"Migrating to 1.9","abstract":[{"type":"text","text":"Update your code to make use of the new "},{"type":"codeVoice","code":"TestStore\/send(_:assert:fileID:file:line:column:)-8877x"},{"text":"","type":"text"},{"type":"text","text":" "},{"type":"text","text":"method on "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","isActive":true,"type":"reference"},{"type":"text","text":" which gives a succinct syntax for sending actions with case key paths, and"},{"type":"text","text":" "},{"type":"text","text":"the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)"},{"type":"text","text":" method for overriding dependencies."}],"url":"\/documentation\/composablearchitecture\/migratingto1.9","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","kind":"article","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"abstract":[{"type":"text","text":"Scopes the store to one that exposes child state and actions."}],"title":"scope(state:action:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"scope","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ChildAction"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"state"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/Action":{"url":"\/documentation\/composablearchitecture\/reducer\/action","title":"Action","abstract":[{"type":"text","text":"A type that holds all possible actions that cause the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","type":"reference","isActive":true},{"type":"text","text":" of the reducer to change"},{"type":"text","text":" "},{"text":"and\/or kick off a side ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"text":" that can communicate with the outside world.","type":"text"}],"type":"topic","required":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Action","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.12":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.12","kind":"article","title":"Migrating to 1.12","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","role":"article","abstract":[{"type":"text","text":"Take advantage of custom decoding and encoding logic for the shared file storage persistence"},{"type":"text","text":" "},{"text":"strategy, as well as beta support for Swift’s native Testing framework.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.16":{"kind":"article","title":"Migrating to 1.16","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":".appStorage"},{"type":"text","text":" strategy used with "},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" now uses key-value observing instead of"},{"type":"text","text":" "},{"code":"NotificationCenter","type":"codeVoice"},{"type":"text","text":" when possible. Learn how this may affect your code."}],"url":"\/documentation\/composablearchitecture\/migratingto1.16","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"url":"\/documentation\/composablearchitecture\/stackbasednavigation","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","title":"Stack-based navigation","type":"topic","abstract":[{"text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to","type":"text"},{"type":"text","text":" "},{"text":"model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"type":"topic","title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Store"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Store","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.7":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.7","kind":"article","title":"Migrating to 1.7","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","role":"article","abstract":[{"text":"Update your code to make use of the new observation tools in the library and get rid of legacy","type":"text"},{"type":"text","text":" "},{"type":"text","text":"APIs such as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore"},{"type":"text","text":", "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"reference","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","isActive":true,"type":"reference"},{"text":", and more.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"preciseIdentifier":"s:22ComposableArchitecture10StackStateV","text":"StackState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture11StackActionO","text":"StackAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"typeIdentifier"},{"kind":"text","text":">>) -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier","text":"Reducer"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"text":">\n","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A special overload of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb"},{"type":"text","text":" for enum"},{"text":" ","type":"text"},{"type":"text","text":"reducers."}],"url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:)","kind":"symbol","title":"forEach(_:action:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:)":{"abstract":[{"text":"Places a value in the reducer’s dependencies.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","type":"topic","role":"symbol","title":"dependency(_:)","url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dependency"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","title":"Reducer","url":"\/documentation\/composablearchitecture\/reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:)":{"kind":"symbol","abstract":[{"text":"A special overload of ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","isActive":true},{"type":"text","text":" for enum"},{"text":" ","type":"text"},{"text":"reducers.","type":"text"}],"title":"ifLet(_:action:)","url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:)","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ifLet"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ChildState"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"kind":"text","text":", "},{"text":"PresentationState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"kind":"text","text":"<"},{"text":"ChildState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ChildAction"},{"text":">>) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":">\n","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"abstract":[{"text":"A Composable Architecture-friendly wrapper around ","type":"text"},{"code":"ForEach","type":"codeVoice"},{"text":" that simplifies working with","type":"text"},{"type":"text","text":" "},{"text":"collections of state.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForEachStore"}],"url":"\/documentation\/composablearchitecture\/foreachstore","role":"symbol","navigatorTitle":[{"text":"ForEachStore","kind":"identifier"}],"deprecated":true,"kind":"symbol","title":"ForEachStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.11":{"abstract":[{"type":"text","text":"Update your code to use the new "},{"type":"codeVoice","code":"withLock"},{"text":" method for mutating shared state from asynchronous","type":"text"},{"type":"text","text":" "},{"type":"text","text":"contexts, rather than mutating the underlying wrapped value directly."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","type":"topic","role":"article","title":"Migrating to 1.11","url":"\/documentation\/composablearchitecture\/migratingto1.11"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17":{"abstract":[{"type":"text","text":"The "},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" property wrapper and related tools have been extracted to their own"},{"text":" ","type":"text"},{"type":"text","text":"library so that they can be used in non-Composable Architecture applications. This a"},{"type":"text","text":" "},{"type":"text","text":"backwards compatible change, but some new deprecations have been introduced."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","type":"topic","role":"article","title":"Migrating to 1.17","url":"\/documentation\/composablearchitecture\/migratingto1.17"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.4":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.4","kind":"article","title":"Migrating to 1.4","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4","role":"article","abstract":[{"type":"text","text":"Update your code to make use of the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"reference","isActive":true},{"type":"text","text":" macro, and learn how to better leverage case key"},{"text":" ","type":"text"},{"text":"paths in your features.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer(state:action:)":{"kind":"symbol","type":"topic","title":"Reducer(state:action:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"state","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture23_SynthesizedConformanceV","text":"_SynthesizedConformance","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"_SynthesizedConformance","preciseIdentifier":"s:22ComposableArchitecture23_SynthesizedConformanceV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"role":"symbol","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer(state:action:)","abstract":[{"text":"An overload of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"type":"text","text":" that takes a description of protocol conformances to synthesize on"},{"type":"text","text":" "},{"type":"text","text":"the State and Action types"}],"url":"\/documentation\/composablearchitecture\/reducer(state:action:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/case":{"url":"\/documentation\/composablearchitecture\/store\/case","title":"case","abstract":[{"type":"text","text":"A destructurable view of a store on a collection of cases."}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"`case`"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16CaseReducerStateP0eD0Qa","kind":"typeIdentifier","text":"StateReducer"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11CaseReducerP0C5ScopeQa","text":"CaseScope"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"CaseReducerState"},{"type":"text","text":" and "},{"code":"Action","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"State.StateReducer.Action"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"type":"topic","url":"\/documentation\/composablearchitecture\/migrationguides","kind":"article","title":"Migration guides","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","role":"collectionGroup","abstract":[{"type":"text","text":"Learn how to upgrade your application to the newest version of the Composable Architecture."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"url":"\/documentation\/composablearchitecture\/withviewstore","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"WithViewStore"}],"type":"topic","title":"WithViewStore","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WithViewStore"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","abstract":[{"type":"text","text":"A view helper that transforms a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":" into a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"type":"text","text":" so that its state can be observed"},{"text":" ","type":"text"},{"text":"by a view builder.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"kind":"symbol","title":"Reducer()","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"},{"kind":"text","text":"()"}],"abstract":[{"text":"Helps implement the conformance to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"type":"text","text":" protocol for a type."}],"url":"\/documentation\/composablearchitecture\/reducer()","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"title":"Effect","role":"symbol","abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.14":{"abstract":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"type":"text","text":" type is now officially "},{"code":"@MainActor","type":"codeVoice"},{"type":"text","text":" isolated."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","type":"topic","role":"article","title":"Migrating to 1.14","url":"\/documentation\/composablearchitecture\/migratingto1.14"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"abstract":[{"text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including","type":"text"},{"text":" ","type":"text"},{"text":"how to model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"url":"\/documentation\/composablearchitecture\/treebasednavigation","title":"Tree-based navigation","kind":"article","role":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"title":"IfLetStore","role":"symbol","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"kind":"symbol","deprecated":true,"type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.15":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.15","kind":"article","title":"Migrating to 1.15","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","role":"article","abstract":[{"type":"text","text":"The library has been completely updated for Swift 6 language mode, and now compiles in strict"},{"text":" ","type":"text"},{"type":"text","text":"concurrency with no warnings or errors."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.10":{"kind":"article","title":"Migrating to 1.10","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","abstract":[{"type":"text","text":"Update your code to make use of the new state sharing tools in the library, such as the "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":" "},{"type":"text","text":"property wrapper, and the "},{"code":"appStorage","type":"codeVoice"},{"type":"text","text":" and "},{"code":"fileStorage","type":"codeVoice"},{"type":"text","text":" persistence strategies."}],"url":"\/documentation\/composablearchitecture\/migratingto1.10","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17.1":{"abstract":[{"text":"The Sharing library has graduated, with backwards-incompatible changes, to 2.0, and the Composable","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Architecture has been updated to extend support to this new version."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17.1","type":"topic","role":"article","title":"Migrating to 1.17.1","url":"\/documentation\/composablearchitecture\/migratingto1.17.1"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"kind":"symbol","type":"topic","title":"Scope","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","url":"\/documentation\/composablearchitecture\/scope","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Scope","kind":"identifier"}],"abstract":[{"text":"Embeds a child reducer in a parent domain.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.18":{"abstract":[{"type":"text","text":"Stores now automatically cancel their in-flight effects when they deallocate. And another UIKit"},{"type":"text","text":" "},{"text":"navigation helper has been introduced.","type":"text"}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.18","type":"topic","role":"article","title":"Migrating to 1.18","url":"\/documentation\/composablearchitecture\/migratingto1.18"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","type":"topic","role":"symbol","title":"TestStore","url":"\/documentation\/composablearchitecture\/teststore","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}]}}}