{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onInsert","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"of"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"supportedContentTypes"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:22UniformTypeIdentifiers6UTTypeV","text":"UTType","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"perform","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", ["},{"text":"NSItemProvider","preciseIdentifier":"c:objc(cs)NSItemProvider","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"DynamicViewContent","preciseIdentifier":"s:7SwiftUI18DynamicViewContentP"},{"text":"\n","kind":"text"}],"platforms":["macOS"]}]}],"metadata":{"externalID":"s:7SwiftUI18DynamicViewContentPAAE8onInsert2of7performQrSay22UniformTypeIdentifiers6UTTypeVG_ySi_SaySo14NSItemProviderCGtctF::SYNTHESIZED::s:22ComposableArchitecture13WithViewStoreV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onInsert"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:22UniformTypeIdentifiers6UTTypeV","kind":"typeIdentifier","text":"UTType"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSItemProvider","text":"NSItemProvider"},{"kind":"text","text":"]) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"DynamicViewContent","preciseIdentifier":"s:7SwiftUI18DynamicViewContentP","kind":"typeIdentifier"}],"roleHeading":"Instance Method","symbolKind":"method","platforms":[{"unavailable":false,"name":"iOS","deprecated":false,"introducedAt":"14.0","beta":false},{"name":"macOS","deprecated":false,"unavailable":false,"introducedAt":"11.0","beta":false},{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"14.0","name":"tvOS"},{"introducedAt":"7.0","unavailable":false,"beta":false,"name":"watchOS","deprecated":false}],"modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"role":"symbol","extendedModule":"SwiftUICore","title":"onInsert(of:perform:)"},"variants":[{"paths":["\/documentation\/composablearchitecture\/withviewstore\/oninsert(of:perform:)-2n2ur"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore\/DynamicViewContent-Implementations"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"DynamicViewContent.onInsert(of:perform:)"},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore\/onInsert(of:perform:)-2n2ur"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore/onInsert(of:perform:)-2n2ur":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore\/onInsert(of:perform:)-2n2ur","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onInsert","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"of"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:22UniformTypeIdentifiers6UTTypeV","text":"UTType","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"perform"},{"text":": (","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":", ["},{"preciseIdentifier":"c:objc(cs)NSItemProvider","kind":"typeIdentifier","text":"NSItemProvider"},{"kind":"text","text":"]) -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI18DynamicViewContentP","text":"DynamicViewContent","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/withviewstore\/oninsert(of:perform:)-2n2ur","kind":"symbol","role":"symbol","title":"onInsert(of:perform:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ViewStore","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/viewstore","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"abstract":[{"text":"A ","type":"text"},{"code":"ViewStore","type":"codeVoice"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"deprecated":true,"title":"ViewStore","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"url":"\/documentation\/composablearchitecture\/withviewstore","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"WithViewStore"}],"type":"topic","title":"WithViewStore","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WithViewStore"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","abstract":[{"type":"text","text":"A view helper that transforms a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":" into a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"type":"text","text":" so that its state can be observed"},{"text":" ","type":"text"},{"text":"by a view builder.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore/DynamicViewContent-Implementations":{"url":"\/documentation\/composablearchitecture\/withviewstore\/dynamicviewcontent-implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore\/DynamicViewContent-Implementations","kind":"article","title":"DynamicViewContent Implementations","role":"collectionGroup","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"type":"topic","title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Store"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Store","kind":"identifier"}]}}}