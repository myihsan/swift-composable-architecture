{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Instance Subscript","title":"subscript(dynamicMember:)","symbolKind":"subscript","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture16BindingViewStateV13dynamicMemberACyqd__Gs15WritableKeyPathCyxqd__G_tcluip","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Subject","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"dynamicMember"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"Subject","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"BindingViewState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":">"}]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Subject","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"keyPath"},{"text":": ","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV","text":"BindingViewState","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":"> { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/subscript(dynamicMember:)"},"variants":[{"paths":["\/documentation\/composablearchitecture\/bindingviewstate\/subscript(dynamicmember:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"type":"topic","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/subscript(dynamicMember:)":{"kind":"symbol","role":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/subscript(dynamicMember:)","type":"topic","title":"subscript(dynamicMember:)","url":"\/documentation\/composablearchitecture\/bindingviewstate\/subscript(dynamicmember:)","fragments":[{"text":"subscript","kind":"keyword"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Subject"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"BindingViewState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV"},{"kind":"text","text":"<"},{"text":"Subject","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","title":"BindingViewState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BindingViewState","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/bindingviewstate","abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"type":"text","text":" "},{"text":"bindable in SwiftUI views.","type":"text"}],"navigatorTitle":[{"text":"BindingViewState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}