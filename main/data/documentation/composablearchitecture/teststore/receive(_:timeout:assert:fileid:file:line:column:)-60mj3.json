{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:fileID:file:line:column:)-60mj3","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"receive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"expectedAction","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":" "},{"text":"nanoseconds","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"text":"? = nil, ","kind":"text"},{"kind":"externalParam","text":"assert"},{"kind":"text","text":" "},{"text":"updateStateToExpectedResult","kind":"internalParam"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")? = nil, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#fileID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":" "},{"text":"filePath","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"text":"#filePath","kind":"keyword"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":" = "},{"text":"#column","kind":"keyword"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An action expected from an effect."}],"type":"paragraph"}],"name":"expectedAction"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The amount of time to wait for the expected action."}]}],"name":"nanoseconds"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that asserts state changed by sending the action to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the store. The mutable state sent to this closure must be modified to match the state of"},{"type":"text","text":" "},{"text":"the store after processing the given action. Do not provide a closure if no change is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"expected."}]}],"name":"updateStateToExpectedResult"},{"name":"fileID","content":[{"inlineContent":[{"text":"The fileID.","type":"text"}],"type":"paragraph"}]},{"name":"filePath","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The filePath."}]}]},{"name":"line","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The line."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The column."}],"type":"paragraph"}],"name":"column"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When an effect is executed in your feature and sends an action back into the system, you can"},{"text":" ","type":"text"},{"text":"use this method to assert that fact, and further assert how state changes after the effect","type":"text"},{"type":"text","text":" "},{"type":"text","text":"action is received:"}]},{"type":"codeListing","syntax":"swift","code":["await store.send(.buttonTapped)","await store.receive(.response(.success(42)) {","  $0.count = 42","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Due to the variability of concurrency in Swift, sometimes a small amount of time needs to pass"},{"type":"text","text":" "},{"type":"text","text":"before effects execute and send actions, and that is why this method suspends. The default"},{"text":" ","type":"text"},{"type":"text","text":"time waited is very small, and typically it is enough so you should be controlling your"},{"type":"text","text":" "},{"text":"dependencies so that they do not wait for real world time to pass (see","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","isActive":true},{"type":"text","text":" for more information on how to do that)."}]},{"inlineContent":[{"text":"To change the amount of time this method waits for an action, pass an explicit ","type":"text"},{"type":"codeVoice","code":"timeout"},{"type":"text","text":" "},{"text":"argument, or set the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout","isActive":true},{"text":" on the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]}],"metadata":{"title":"receive(_:timeout:assert:fileID:file:line:column:)","roleHeading":"Instance Method","symbolKind":"method","externalID":"s:22ComposableArchitecture9TestStoreCAASQR_rlE7receive_7timeout6assert6fileID0H04line6columnyq__s6UInt64VSgyxzKcSgs12StaticStringVAPS2utYaF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"receive"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"timeout"},{"text":": ","kind":"text"},{"text":"UInt64","preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"assert","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")?, "},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"role":"symbol","extendedModule":"ComposableArchitecture","modules":[{"name":"ComposableArchitecture"}],"conformance":{"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":" and ","type":"text"},{"code":"Action","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"sections":[],"abstract":[{"text":"Asserts an action was received from an effect and asserts how the state changes.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/receive(_:timeout:assert:fileid:file:line:column:)-60mj3"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyManagement":{"abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"text":" ","type":"text"},{"text":"any reducer.","type":"text"}],"title":"Dependencies","url":"\/documentation\/composablearchitecture\/dependencymanagement","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","kind":"article","role":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","type":"topic","role":"symbol","title":"TestStore","url":"\/documentation\/composablearchitecture\/teststore","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/timeout":{"title":"timeout","url":"\/documentation\/composablearchitecture\/teststore\/timeout","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"timeout","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"}],"kind":"symbol","abstract":[{"type":"text","text":"The default timeout used in all methods that take an optional timeout."}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/receive(_:timeout:assert:fileID:file:line:column:)-60mj3":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"receive"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"assert"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/receive(_:timeout:assert:fileid:file:line:column:)-60mj3","title":"receive(_:timeout:assert:fileID:file:line:column:)","abstract":[{"text":"Asserts an action was received from an effect and asserts how the state changes.","type":"text"}],"role":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}]},"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:fileID:file:line:column:)-60mj3"}}}