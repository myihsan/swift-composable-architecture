{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Dependencies in an application are the types and functions that need to interact with outside","type":"text"},{"type":"text","text":" "},{"text":"systems that you do not control. Classic examples of this are API clients that make network requests","type":"text"},{"type":"text","text":" "},{"text":"to servers, but also seemingly innocuous things such as ","type":"text"},{"type":"codeVoice","code":"UUID"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" initializers, and even"},{"text":" ","type":"text"},{"type":"text","text":"clocks, can be thought of as dependencies."}]},{"inlineContent":[{"text":"By controlling the dependencies our features need to do their job we gain the ability to completely","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"alter the execution context a feature runs in. This means in tests and Xcode previews you can"},{"text":" ","type":"text"},{"type":"text","text":"provide a mock version of an API client that immediately returns some stubbed data rather than"},{"type":"text","text":" "},{"type":"text","text":"making a live network request to a server."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The dependency management system in the Composable Architecture is driven off of our","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"http:\/\/github.com\/pointfreeco\/swift-dependencies"},{"type":"text","text":" library. That repository has extensive"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/pointfreeco.github.io\/swift-dependencies\/main\/documentation\/dependencies\/"},{"type":"text","text":" and articles, and we highly recommend you familiarize yourself"},{"type":"text","text":" "},{"text":"with all of that content to best leverage dependencies.","type":"text"}]}],"style":"note","type":"aside","name":"Note"},{"level":2,"text":"Overriding dependencies","anchor":"Overriding-dependencies","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"It is possible to change the dependencies for just one particular reducer inside a larger composed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reducer. This can be handy when running a feature in a more controlled environment where it may not"},{"type":"text","text":" "},{"type":"text","text":"be appropriate to communicate with the outside world."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, suppose you want to teach users how to use your feature through an onboarding"},{"text":" ","type":"text"},{"text":"experience. In such an experience it may not be appropriate for the user’s actions to cause","type":"text"},{"type":"text","text":" "},{"text":"data to be written to disk, or user defaults to be written, or any number of things. It would be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"better to use mock versions of those dependencies so that the user can interact with your feature"},{"type":"text","text":" "},{"text":"in a fully controlled environment.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"To do this you can use the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:_:)"},{"text":" method to override a reducer’s","type":"text"},{"type":"text","text":" "},{"type":"text","text":"dependency with another value:"}]},{"type":"codeListing","syntax":"swift","code":["@Reducer","struct Onboarding {","  var body: some Reducer<State, Action> {","    Reduce { state, action in ","      \/\/ Additional onboarding logic","    }","    Feature()","      .dependency(\\.userDefaults, .mock)","      .dependency(\\.database, .mock)","  }","}"]},{"inlineContent":[{"type":"text","text":"This will cause the "},{"code":"Feature","type":"codeVoice"},{"type":"text","text":" reducer to use a mock user defaults and database dependency, as well"},{"text":" ","type":"text"},{"type":"text","text":"as any reducer "},{"type":"codeVoice","code":"Feature"},{"type":"text","text":" uses under the hood, "},{"type":"emphasis","inlineContent":[{"text":"and","type":"text"}]},{"text":" any effects produced by ","type":"text"},{"type":"codeVoice","code":"Feature"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"kind":"article","seeAlsoSections":[{"anchor":"Essentials","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ"],"generated":true,"title":"Essentials"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/dependencymanagement"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"abstract":[{"text":"Learn how to register dependencies with the library so that they can be immediately accessible from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"any reducer."}],"sections":[],"metadata":{"title":"Dependencies","roleHeading":"Article","role":"article","modules":[{"name":"ComposableArchitecture"}]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"role":"collectionGroup","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"text":" ","type":"text"},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","title":"Navigation","url":"\/documentation\/composablearchitecture\/navigation","kind":"article"},"https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/":{"identifier":"https:\/\/pointfreeco.github.io\/swift-dependencies\/main\/documentation\/dependencies\/","type":"link","title":"documentation","titleInlineContent":[{"type":"text","text":"documentation"}],"url":"https:\/\/pointfreeco.github.io\/swift-dependencies\/main\/documentation\/dependencies\/"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:_:)","title":"dependency(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"dependency","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Sets the dependency value of the specified key path to the given value."}],"type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:_:)"},"http://github.com/pointfreeco/swift-dependencies":{"identifier":"http:\/\/github.com\/pointfreeco\/swift-dependencies","type":"link","title":"Dependencies","titleInlineContent":[{"text":"Dependencies","type":"text"}],"url":"http:\/\/github.com\/pointfreeco\/swift-dependencies"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"type":"topic","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/GettingStarted":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","title":"Getting started","kind":"article","role":"article","abstract":[{"text":"Learn how to integrate the Composable Architecture into your project and write your first","type":"text"},{"type":"text","text":" "},{"type":"text","text":"application."}],"type":"topic","url":"\/documentation\/composablearchitecture\/gettingstarted"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FAQ":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ","abstract":[{"type":"text","text":"A collection of some of the most common questions and comments people have concerning the library."}],"type":"topic","role":"article","title":"Frequently asked questions","url":"\/documentation\/composablearchitecture\/faq"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","title":"Performance","kind":"article","role":"article","abstract":[{"type":"text","text":"Learn how to improve the performance of features built in the Composable Architecture."}],"type":"topic","url":"\/documentation\/composablearchitecture\/performance"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestingTCA":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA","abstract":[{"type":"text","text":"Learn how to write comprehensive and exhaustive tests for your features built in the Composable"},{"type":"text","text":" "},{"text":"Architecture.","type":"text"}],"type":"topic","role":"article","title":"Testing","url":"\/documentation\/composablearchitecture\/testingtca"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"type":"topic","role":"article","url":"\/documentation\/composablearchitecture\/sharingstate","title":"Sharing state"}}}