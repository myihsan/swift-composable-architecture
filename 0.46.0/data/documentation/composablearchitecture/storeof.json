{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","metadata":{"symbolKind":"typealias","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Type Alias","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoreOf","kind":"identifier"}],"externalID":"s:22ComposableArchitecture7StoreOfa","title":"StoreOf","navigatorTitle":[{"kind":"identifier","text":"StoreOf"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreOf"},"sections":[],"seeAlsoSections":[{"anchor":"Creating-a-store","generated":true,"title":"Creating a store","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"StoreOf","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":"> = ","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/State","preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP5StateQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"R"},{"text":".","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP6ActionQa","text":"Action"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"R"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","text":"ReducerProtocol"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Instead of specifying two generics:"}]},{"type":"codeListing","syntax":"swift","code":["let store: Store<Feature.State, Feature.Action>"]},{"inlineContent":[{"text":"You can specify a single generic:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let store: StoreOf<Feature>"]}]}],"abstract":[{"text":"A convenience type alias for referring to a store of a given reducer’s domain.","type":"text"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/storeof"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/init(initialState:reducer:)":{"url":"\/documentation\/composablearchitecture\/store\/init(initialstate:reducer:)","title":"init(initialState:reducer:)","fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"initialState","kind":"externalParam"},{"kind":"text","text":": "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP5StateQa","text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"reducer"},{"kind":"text","text":": "},{"text":"R","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Initializes a store from an initial state and a reducer."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol/Action":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Action"}],"required":true,"kind":"symbol","title":"Action","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/Action","abstract":[{"type":"text","text":"A type that holds all possible actions that cause the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/State","isActive":true},{"text":" of the reducer to change","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and\/or kick off a side "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","type":"reference","isActive":true},{"type":"text","text":" that can communicate with the outside world."}],"url":"\/documentation\/composablearchitecture\/reducerprotocol\/action","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol":{"type":"topic","title":"ReducerProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ReducerProtocol","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask"},{"type":"text","text":"s should be executed later by the store, if"},{"text":" ","type":"text"},{"text":"any.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","navigatorTitle":[{"text":"ReducerProtocol","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"kind":"symbol","abstract":[{"type":"text","text":"A convenience type alias for referring to an effect that can never fail, like the kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher"},{"type":"text","text":" returned by a reducer after processing an action."}],"navigatorTitle":[{"text":"EffectTask","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"EffectTask","kind":"identifier"}],"title":"EffectTask","url":"\/documentation\/composablearchitecture\/effecttask","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreOf":{"url":"\/documentation\/composablearchitecture\/storeof","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StoreOf"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A convenience type alias for referring to a store of a given reducer’s domain."}],"title":"StoreOf","navigatorTitle":[{"kind":"identifier","text":"StoreOf"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreOf"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","role":"symbol","url":"\/documentation\/composablearchitecture\/store","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol/State":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"required":true,"kind":"symbol","title":"State","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/State","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol\/state","role":"symbol"}}}