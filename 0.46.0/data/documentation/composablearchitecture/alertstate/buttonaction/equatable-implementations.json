{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/ButtonAction\/Equatable-Implementations"},"metadata":{"modules":[{"name":"ComposableArchitecture"}],"role":"collectionGroup","title":"Equatable Implementations","roleHeading":"API Collection"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/alertstate\/buttonaction\/equatable-implementations"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/ButtonAction"]]},"sections":[],"topicSections":[{"generated":true,"anchor":"Operators","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/ButtonAction\/!=(_:_:)"],"title":"Operators"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState":{"title":"AlertState","role":"symbol","url":"\/documentation\/composablearchitecture\/alertstate","abstract":[{"text":"A data type that describes the state of an alert that can be shown to the user. The ","type":"text"},{"type":"codeVoice","code":"Action"},{"text":" ","type":"text"},{"type":"text","text":"generic is the type of actions that can be sent from tapping on a button in the alert."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AlertState"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AlertState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/ButtonAction":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/ButtonAction","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ButtonAction"}],"type":"topic","title":"AlertState.ButtonAction","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ButtonAction","kind":"identifier"}],"abstract":[],"url":"\/documentation\/composablearchitecture\/alertstate\/buttonaction","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","type":"topic","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftui","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/ButtonAction/!=(_:_:)":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/ButtonAction\/!=(_:_:)","url":"\/documentation\/composablearchitecture\/alertstate\/buttonaction\/!=(_:_:)","title":"!=(_:_:)","type":"topic","abstract":[],"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}