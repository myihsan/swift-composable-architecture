{"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/dependencies"]}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture9TestStoreC12dependencies12Dependencies16DependencyValuesVvp","title":"dependencies","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dependencies"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"}],"symbolKind":"property","role":"symbol","roleHeading":"Instance Property"},"abstract":[{"text":"The current dependencies of the test store.","type":"text"}],"sections":[],"seeAlsoSections":[{"anchor":"Configuring-a-test-store","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout"],"generated":true,"title":"Configuring a test store"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dependencies"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"The dependencies define the execution context that your feature runs in. They can be"},{"text":" ","type":"text"},{"type":"text","text":"modified throughout the test storeâ€™s lifecycle in order to influence how your feature"},{"text":" ","type":"text"},{"type":"text","text":"produces effects."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Typically you will override certain dependencies immediately after constructing the test","type":"text"},{"type":"text","text":" "},{"type":"text","text":"store. For example, if your feature need access to the current date and an API client to"},{"type":"text","text":" "},{"text":"do its job, you can override those dependencies like so:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let store = TestStore(\/* ... *\/)","","store.dependencies.apiClient = .mock","store.dependencies.date = .constant(Date(timeIntervalSinceReferenceDate: 1234567890))","","\/\/ Store assertions here"]},{"inlineContent":[{"text":"You can also override dependencies in the middle of the test in order to simulate how the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"dependency changes as the user performs action. For example, to test the flow of an API"},{"type":"text","text":" "},{"type":"text","text":"request failing at first but then later succeeding, you can do the following:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["store.dependencies.apiClient = .failing","","store.send(.buttonTapped) { \/* ... *\/ }","store.receive(.searchResponse(.failure)) { \/* ... *\/ }","","store.dependencies.apiClient = .mock","","store.send(.buttonTapped) { \/* ... *\/ }","store.receive(.searchResponse(.success)) { \/* ... *\/ }"]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/dependencies","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/exhaustivity":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","kind":"symbol","type":"topic","title":"exhaustivity","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"exhaustivity"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO","kind":"typeIdentifier","text":"Exhaustivity"}],"url":"\/documentation\/composablearchitecture\/teststore\/exhaustivity","abstract":[{"type":"text","text":"The current exhaustivity level of the test store."}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"type":"topic","kind":"symbol","role":"symbol","title":"TestStore","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/teststore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","abstract":[{"type":"text","text":"A testable runtime for a reducer."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/timeout":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"timeout"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"}],"type":"topic","url":"\/documentation\/composablearchitecture\/teststore\/timeout","title":"timeout","role":"symbol","abstract":[{"type":"text","text":"The default timeout used in all methods that take an optional timeout."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/timeout","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/dependencies":{"abstract":[{"text":"The current dependencies of the test store.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dependencies"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier","text":"DependencyValues"}],"url":"\/documentation\/composablearchitecture\/teststore\/dependencies","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/dependencies","title":"dependencies","kind":"symbol","type":"topic","role":"symbol"}}}