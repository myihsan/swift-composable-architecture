{"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/scope(state:)"],"title":"Scoping test stores","anchor":"Scoping-test-stores"}],"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/scope(state:action:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"A"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"ScopedState"},{"text":") -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": (","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ScopedAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TestStore","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TestStoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":">"}],"externalID":"s:22ComposableArchitecture9TestStoreC5scope5state6actionACyxq_qd__qd_0_q2_Gqd__q0_c_q1_qd_0_ctr0_lF","title":"scope(state:action:)","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","extendedModule":"ComposableArchitecture","symbolKind":"method","role":"symbol"},"abstract":[{"type":"text","text":"Scopes a store to assert against scoped state and actions."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"A","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":" "},{"text":"toScopedState","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"text":"ScopedState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"action","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"fromScopedAction","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"A"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"ScopedAction"},{"kind":"text","text":") -> "},{"text":"TestStore","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","preciseIdentifier":"s:22ComposableArchitecture9TestStoreC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"text":"Environment","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"toScopedState","content":[{"type":"paragraph","inlineContent":[{"text":"A function that transforms the reducer’s state into scoped state. This","type":"text"},{"type":"text","text":" "},{"type":"text","text":"state will be asserted against as it is mutated by the reducer. Useful for testing view"},{"type":"text","text":" "},{"type":"text","text":"store state transformations."}]}]},{"name":"fromScopedAction","content":[{"type":"paragraph","inlineContent":[{"text":"A function that wraps a more scoped action in the reducer’s action.","type":"text"},{"type":"text","text":" "},{"text":"Scoped actions can be “sent” to the store, while any reducer action may be received.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Useful for testing view store action transformations."}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Useful for testing view store-specific state and actions."}]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/teststore\/scope(state:action:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/scope(state:)":{"abstract":[{"text":"Scopes a store to assert against scoped state.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"state"},{"text":": (","kind":"text"},{"text":"ScopedState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"S","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TestStore","preciseIdentifier":"s:22ComposableArchitecture9TestStoreC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ScopedAction"},{"text":", ","kind":"text"},{"text":"Environment","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/composablearchitecture\/teststore\/scope(state:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/scope(state:)","title":"scope(state:)","kind":"symbol","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"type":"topic","kind":"symbol","role":"symbol","title":"TestStore","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/teststore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","abstract":[{"type":"text","text":"A testable runtime for a reducer."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/scope(state:action:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"scope","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"A"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ScopedState"},{"kind":"text","text":") -> "},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":") -> "},{"text":"ScopedAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TestStore","preciseIdentifier":"s:22ComposableArchitecture9TestStoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Environment","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"scope(state:action:)","url":"\/documentation\/composablearchitecture\/teststore\/scope(state:action:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/scope(state:action:)","role":"symbol","abstract":[{"type":"text","text":"Scopes a store to assert against scoped state and actions."}],"kind":"symbol"}}}