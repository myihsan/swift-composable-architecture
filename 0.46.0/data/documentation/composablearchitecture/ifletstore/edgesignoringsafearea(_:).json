{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"externalID":"s:7SwiftUI4ViewPAAE21edgesIgnoringSafeAreayQrAA4EdgeO3SetVF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","title":"edgesIgnoringSafeArea(_:)","roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"edgesIgnoringSafeArea","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7SwiftUI4EdgeO","kind":"typeIdentifier","text":"Edge"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:7SwiftUI4EdgeO3SetV"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"platforms":[{"deprecatedAt":"100000.0","unavailable":false,"introducedAt":"13.0","beta":false,"message":"Use ignoresSafeArea(_:edges:) instead.","deprecated":false,"name":"iOS"},{"beta":false,"introducedAt":"10.15","unavailable":false,"message":"Use ignoresSafeArea(_:edges:) instead.","deprecatedAt":"100000.0","name":"macOS","deprecated":false},{"deprecated":false,"name":"tvOS","message":"Use ignoresSafeArea(_:edges:) instead.","beta":false,"deprecatedAt":"100000.0","introducedAt":"13.0","unavailable":false},{"name":"visionOS","deprecatedAt":"100000.0","unavailable":false,"beta":false,"introducedAt":"1.0","deprecated":false,"message":"Use ignoresSafeArea(_:edges:) instead."},{"message":"Use ignoresSafeArea(_:edges:) instead.","deprecatedAt":"100000.0","name":"watchOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"6.0"}],"extendedModule":"SwiftUICore","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"symbolKind":"method"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/edgesIgnoringSafeArea(_:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"edgesIgnoringSafeArea"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"edges","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4EdgeO","text":"Edge","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:7SwiftUI4EdgeO3SetV"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/edgesignoringsafearea(_:)"]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.edgesIgnoringSafeArea(_:)"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use ignoresSafeArea(_:edges:) instead."}],"type":"paragraph"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/ifletstore","type":"topic","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"IfLetStore","kind":"identifier"}],"title":"IfLetStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/edgesIgnoringSafeArea(_:)":{"deprecated":true,"url":"\/documentation\/composablearchitecture\/ifletstore\/edgesignoringsafearea(_:)","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/edgesIgnoringSafeArea(_:)","kind":"symbol","title":"edgesIgnoringSafeArea(_:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"edgesIgnoringSafeArea","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4EdgeO","text":"Edge"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4EdgeO3SetV","kind":"typeIdentifier","text":"Set"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"title":"View Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","type":"topic","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","type":"topic","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftui","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}