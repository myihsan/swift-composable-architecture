{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"truncationMode","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"mode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI4TextV","text":"Text","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"TruncationMode","preciseIdentifier":"s:7SwiftUI4TextV14TruncationModeO"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}]}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/truncationMode(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.truncationMode(_:)"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/truncationmode(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"kind":"symbol","metadata":{"platforms":[{"deprecated":false,"introducedAt":"13.0","unavailable":false,"name":"iOS","beta":false},{"unavailable":false,"beta":false,"deprecated":false,"name":"macOS","introducedAt":"10.15"},{"beta":false,"name":"tvOS","deprecated":false,"unavailable":false,"introducedAt":"13.0"},{"introducedAt":"6.0","deprecated":false,"name":"watchOS","beta":false,"unavailable":false}],"externalID":"s:7SwiftUI4ViewPAAE14truncationModeyQrAA4TextV010TruncationE0OF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"truncationMode"},{"kind":"text","text":"("},{"text":"Text","preciseIdentifier":"s:7SwiftUI4TextV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4TextV14TruncationModeO","text":"TruncationMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"title":"truncationMode(_:)","role":"symbol","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"extendedModule":"SwiftUICore","symbolKind":"method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/ifletstore","type":"topic","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"IfLetStore","kind":"identifier"}],"title":"IfLetStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/truncationMode(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"truncationMode"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Text","preciseIdentifier":"s:7SwiftUI4TextV"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"TruncationMode","preciseIdentifier":"s:7SwiftUI4TextV14TruncationModeO"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"abstract":[],"kind":"symbol","title":"truncationMode(_:)","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/truncationmode(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/truncationMode(_:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","type":"topic","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftui","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"title":"View Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","type":"topic","role":"collectionGroup"}}}