{"metadata":{"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Structure","symbolKind":"struct","externalID":"s:22ComposableArchitecture4SendV","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Send","kind":"identifier"}],"title":"Send","role":"symbol","navigatorTitle":[{"text":"Send","kind":"identifier"}]},"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/init(send:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/send"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/callAsFunction(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/callAsFunction(_:animation:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher\/run(priority:operation:catch:file:fileID:line:)"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher\/run(priority:operation:catch:file:fileID:line:)"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Send","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Action"},{"text":">","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"inlineContent":[{"text":"This type implements ","type":"text"},{"type":"reference","identifier":"https:\/\/docs.swift.org\/swift-book\/ReferenceManual\/Declarations.html#ID622","isActive":true},{"text":" so that you invoke it as a function","type":"text"},{"text":" ","type":"text"},{"text":"rather than calling methods on it:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["return .run { send in","  send(.started)","  defer { send(.finished) }","  for await event in self.events {","    send(.event(event))","  }","}"]},{"inlineContent":[{"type":"text","text":"You can also send actions with animation:"}],"type":"paragraph"},{"syntax":"swift","code":["send(.started, animation: .spring())","defer { send(.finished, animation: .default) }"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"See "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher\/run(priority:operation:catch:file:fileID:line:)","type":"reference"},{"type":"text","text":" for more information on how to"},{"text":" ","type":"text"},{"type":"text","text":"use this value to construct effects that can emit any number of times in an asynchronous"},{"type":"text","text":" "},{"type":"text","text":"context."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/send"]}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP"]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"abstract":[{"type":"text","text":"A type that can send actions back into the system when used from"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher\/run(priority:operation:catch:file:fileID:line:)"},{"type":"text","text":"."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Send/init(send:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/init(send:)","role":"symbol","title":"init(send:)","url":"\/documentation\/composablearchitecture\/send\/init(send:)","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"send"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Action"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID622":{"type":"link","titleInlineContent":[{"type":"codeVoice","code":"callAsFunction"}],"title":"callAsFunction","url":"https:\/\/docs.swift.org\/swift-book\/ReferenceManual\/Declarations.html#ID622","identifier":"https:\/\/docs.swift.org\/swift-book\/ReferenceManual\/Declarations.html#ID622"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","role":"symbol","url":"\/documentation\/composablearchitecture\/store","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Send/callAsFunction(_:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/callAsFunction(_:)","role":"symbol","title":"callAsFunction(_:)","url":"\/documentation\/composablearchitecture\/send\/callasfunction(_:)","abstract":[{"type":"text","text":"Sends an action back into the system from an effect."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Action"},{"text":")","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectPublisher/run(priority:operation:catch:file:fileID:line:)":{"kind":"symbol","role":"symbol","conformance":{"constraints":[{"code":"Failure","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Never","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"text":"Wraps an asynchronous unit of work that can emit any number of times in an effect.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"run"},{"text":"(","kind":"text"},{"text":"priority","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:ScP","text":"TaskPriority","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"operation","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Send","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture4SendV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"text":"catch","kind":"externalParam"},{"text":": ((any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Send","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture4SendV"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture15EffectPublisherV","text":"EffectPublisher"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/composablearchitecture\/effectpublisher\/run(priority:operation:catch:file:fileid:line:)","title":"run(priority:operation:catch:file:fileID:line:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher\/run(priority:operation:catch:file:fileID:line:)"},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Send":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Send","kind":"identifier"}],"abstract":[{"text":"A type that can send actions back into the system when used from","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher\/run(priority:operation:catch:file:fileID:line:)","isActive":true,"type":"reference"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Send","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/send","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send","title":"Send"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Send/callAsFunction(_:animation:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/callAsFunction(_:animation:)","role":"symbol","title":"callAsFunction(_:animation:)","url":"\/documentation\/composablearchitecture\/send\/callasfunction(_:animation:)","abstract":[{"text":"Sends an action back into the system from an effect with animation.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"callAsFunction"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"text":"animation","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI9AnimationV","kind":"typeIdentifier","text":"Animation"},{"text":"?)","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"kind":"symbol","abstract":[{"type":"text","text":"A convenience type alias for referring to an effect that can never fail, like the kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher"},{"type":"text","text":" returned by a reducer after processing an action."}],"navigatorTitle":[{"text":"EffectTask","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"EffectTask","kind":"identifier"}],"title":"EffectTask","url":"\/documentation\/composablearchitecture\/effecttask","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectPublisher":{"title":"EffectPublisher","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","abstract":[{"type":"text","text":"A type that encapsulates a unit of work that can be run in the outside world, and can feed"},{"type":"text","text":" "},{"type":"text","text":"actions back to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/effectpublisher","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EffectPublisher"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EffectPublisher"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Send/send":{"kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}],"type":"topic","url":"\/documentation\/composablearchitecture\/send\/send","title":"send","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/send"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol":{"type":"topic","title":"ReducerProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ReducerProtocol","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask"},{"type":"text","text":"s should be executed later by the store, if"},{"text":" ","type":"text"},{"text":"any.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","navigatorTitle":[{"text":"ReducerProtocol","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol"}}}