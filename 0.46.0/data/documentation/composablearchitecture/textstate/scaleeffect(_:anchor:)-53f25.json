{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/View-Implementations"]]},"metadata":{"platforms":[{"deprecated":false,"introducedAt":"13.0","unavailable":false,"beta":false,"name":"iOS"},{"deprecated":false,"name":"macOS","introducedAt":"10.15","unavailable":false,"beta":false},{"name":"tvOS","introducedAt":"13.0","beta":false,"deprecated":false,"unavailable":false},{"unavailable":false,"beta":false,"deprecated":false,"name":"watchOS","introducedAt":"6.0"}],"symbolKind":"method","externalID":"s:7SwiftUI4ViewPAAE11scaleEffect_6anchorQrSo6CGSizeV_AA9UnitPointVtF::SYNTHESIZED::s:22ComposableArchitecture9TextStateV","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"title":"scaleEffect(_:anchor:)","extendedModule":"SwiftUICore","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scaleEffect"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@S@CGSize","text":"CGSize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"anchor"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI9UnitPointV","kind":"typeIdentifier","text":"UnitPoint"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"roleHeading":"Instance Method","role":"symbol"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.scaleEffect(_:anchor:)","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"scaleEffect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"scale"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@S@CGSize","text":"CGSize","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"anchor"},{"text":": ","kind":"text"},{"text":"UnitPoint","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9UnitPointV"},{"text":" = .center) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"text":"\n","kind":"text"}]}],"kind":"declarations"}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/scaleEffect(_:anchor:)-53f25","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/textstate\/scaleeffect(_:anchor:)-53f25"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","type":"topic","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftui","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState":{"type":"topic","url":"\/documentation\/composablearchitecture\/textstate","kind":"symbol","abstract":[{"type":"text","text":"An equatable description of SwiftUI "},{"code":"Text","type":"codeVoice"},{"type":"text","text":". Useful for storing rich text in state for the"},{"type":"text","text":" "},{"text":"purpose of rendering in a view hierarchy.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TextState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","title":"TextState","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TextState"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/scaleEffect(_:anchor:)-53f25":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/scaleEffect(_:anchor:)-53f25","kind":"symbol","type":"topic","title":"scaleEffect(_:anchor:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"scaleEffect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:@S@CGSize","text":"CGSize"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"anchor"},{"kind":"text","text":": "},{"text":"UnitPoint","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9UnitPointV"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"abstract":[],"url":"\/documentation\/composablearchitecture\/textstate\/scaleeffect(_:anchor:)-53f25","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/View-Implementations":{"type":"topic","url":"\/documentation\/composablearchitecture\/textstate\/view-implementations","kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/View-Implementations","title":"View Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}