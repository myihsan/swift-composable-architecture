{"kind":"symbol","metadata":{"symbolKind":"op","role":"symbol","modules":[{"name":"ComposableArchitecture","relatedModules":["Swift"]}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"extendedModule":"Swift","title":"!=(_:_:)","roleHeading":"Operator","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:22ComposableArchitecture9TextStateV25AccessibilityHeadingLevelO"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/AccessibilityHeadingLevel\/!=(_:_:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"code":"Equatable.!=(_:_:)","type":"codeVoice"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/AccessibilityHeadingLevel","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/AccessibilityHeadingLevel\/Equatable-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/textstate\/accessibilityheadinglevel\/!=(_:_:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/AccessibilityHeadingLevel/Equatable-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/AccessibilityHeadingLevel\/Equatable-Implementations","title":"Equatable Implementations","kind":"article","url":"\/documentation\/composablearchitecture\/textstate\/accessibilityheadinglevel\/equatable-implementations","role":"collectionGroup","abstract":[],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/AccessibilityHeadingLevel":{"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/textstate\/accessibilityheadinglevel","abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AccessibilityHeadingLevel","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/AccessibilityHeadingLevel","title":"TextState.AccessibilityHeadingLevel","navigatorTitle":[{"text":"AccessibilityHeadingLevel","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","type":"topic","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftui","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/AccessibilityHeadingLevel/!=(_:_:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/composablearchitecture\/textstate\/accessibilityheadinglevel\/!=(_:_:)","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/AccessibilityHeadingLevel\/!=(_:_:)","title":"!=(_:_:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState":{"type":"topic","url":"\/documentation\/composablearchitecture\/textstate","kind":"symbol","abstract":[{"type":"text","text":"An equatable description of SwiftUI "},{"code":"Text","type":"codeVoice"},{"type":"text","text":". Useful for storing rich text in state for the"},{"type":"text","text":" "},{"text":"purpose of rendering in a view hierarchy.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TextState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","title":"TextState","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TextState"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}