{"kind":"symbol","metadata":{"externalID":"s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp::SYNTHESIZED::s:22ComposableArchitecture9TextStateV25AccessibilityHeadingLevelO","role":"symbol","extendedModule":"Swift","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"modules":[{"name":"ComposableArchitecture","relatedModules":["Swift"]}],"title":"hashValue","symbolKind":"property"},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/AccessibilityHeadingLevel\/hashValue"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/textstate\/accessibilityheadinglevel\/hashvalue"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Inherited from "},{"code":"RawRepresentable.hashValue","type":"codeVoice"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/AccessibilityHeadingLevel","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/AccessibilityHeadingLevel\/RawRepresentable-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/AccessibilityHeadingLevel/RawRepresentable-Implementations":{"title":"RawRepresentable Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/AccessibilityHeadingLevel\/RawRepresentable-Implementations","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/textstate\/accessibilityheadinglevel\/rawrepresentable-implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","type":"topic","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftui","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/AccessibilityHeadingLevel/hashValue":{"title":"hashValue","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/AccessibilityHeadingLevel\/hashValue","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[],"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/textstate\/accessibilityheadinglevel\/hashvalue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hashValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/AccessibilityHeadingLevel":{"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/textstate\/accessibilityheadinglevel","abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AccessibilityHeadingLevel","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/AccessibilityHeadingLevel","title":"TextState.AccessibilityHeadingLevel","navigatorTitle":[{"text":"AccessibilityHeadingLevel","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState":{"type":"topic","url":"\/documentation\/composablearchitecture\/textstate","kind":"symbol","abstract":[{"type":"text","text":"An equatable description of SwiftUI "},{"code":"Text","type":"codeVoice"},{"type":"text","text":". Useful for storing rich text in state for the"},{"type":"text","text":" "},{"text":"purpose of rendering in a view hierarchy.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TextState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","title":"TextState","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TextState"}]}}}