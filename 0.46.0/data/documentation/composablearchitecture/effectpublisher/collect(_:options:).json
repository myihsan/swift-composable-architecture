{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher\/Publisher-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher\/Publisher-Implementations"]]},"metadata":{"roleHeading":"Instance Method","platforms":[{"introducedAt":"13.0","name":"iOS","deprecated":false,"unavailable":false,"beta":false},{"introducedAt":"10.15","name":"macOS","beta":false,"unavailable":false,"deprecated":false},{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0","name":"tvOS"},{"deprecated":false,"name":"watchOS","beta":false,"unavailable":false,"introducedAt":"6.0"}],"symbolKind":"method","role":"symbol","extendedModule":"Combine","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collect","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Publishers","kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Combine10PublishersO20TimeGroupingStrategyO","kind":"typeIdentifier","text":"TimeGroupingStrategy"},{"text":"<","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine9SchedulerP0B7OptionsQa","text":"SchedulerOptions"},{"text":"?) -> ","kind":"text"},{"text":"Publishers","preciseIdentifier":"s:7Combine10PublishersO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Combine10PublishersO13CollectByTimeV","kind":"typeIdentifier","text":"CollectByTime"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"S","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:7Combine9PublisherPAAE7collect_7optionsAA10PublishersO13CollectByTimeVy_xqd__GAG0H16GroupingStrategyOy_qd__G_16SchedulerOptionsQyd__SgtAA0K0Rd__lF::SYNTHESIZED::s:22ComposableArchitecture15EffectPublisherV","title":"collect(_:options:)","modules":[{"name":"ComposableArchitecture","relatedModules":["Combine"]}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher\/collect(_:options:)"},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"Publisher.collect(_:options:)","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"collect","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"strategy","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO","text":"Publishers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"TimeGroupingStrategy","preciseIdentifier":"s:7Combine10PublishersO20TimeGroupingStrategyO"},{"text":"<","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SchedulerOptions","preciseIdentifier":"s:7Combine9SchedulerP0B7OptionsQa","kind":"typeIdentifier"},{"text":"? = nil) -> ","kind":"text"},{"text":"Publishers","preciseIdentifier":"s:7Combine10PublishersO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"CollectByTime","kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO13CollectByTimeV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"S","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Combine9SchedulerP","text":"Scheduler","kind":"typeIdentifier"}]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/effectpublisher\/collect(_:options:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectPublisher":{"title":"EffectPublisher","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","abstract":[{"type":"text","text":"A type that encapsulates a unit of work that can be run in the outside world, and can feed"},{"type":"text","text":" "},{"type":"text","text":"actions back to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/effectpublisher","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EffectPublisher"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EffectPublisher"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"kind":"symbol","abstract":[{"type":"text","text":"A convenience type alias for referring to an effect that can never fail, like the kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher"},{"type":"text","text":" returned by a reducer after processing an action."}],"navigatorTitle":[{"text":"EffectTask","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"EffectTask","kind":"identifier"}],"title":"EffectTask","url":"\/documentation\/composablearchitecture\/effecttask","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectPublisher/Publisher-Implementations":{"abstract":[],"url":"\/documentation\/composablearchitecture\/effectpublisher\/publisher-implementations","title":"Publisher Implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher\/Publisher-Implementations","kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol":{"type":"topic","title":"ReducerProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ReducerProtocol","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask"},{"type":"text","text":"s should be executed later by the store, if"},{"text":" ","type":"text"},{"text":"any.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","navigatorTitle":[{"text":"ReducerProtocol","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectPublisher/collect(_:options:)":{"type":"topic","url":"\/documentation\/composablearchitecture\/effectpublisher\/collect(_:options:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher\/collect(_:options:)","role":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"collect","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:7Combine10PublishersO","text":"Publishers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"TimeGroupingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO20TimeGroupingStrategyO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":">, "},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Combine9SchedulerP0B7OptionsQa","text":"SchedulerOptions","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Publishers","kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO13CollectByTimeV","text":"CollectByTime"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"collect(_:options:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","role":"symbol","url":"\/documentation\/composablearchitecture\/store","type":"topic"}}}