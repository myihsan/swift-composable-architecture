{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableState"]]},"sections":[],"metadata":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"BindableState","preciseIdentifier":"s:22ComposableArchitecture13BindableStateV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"text":">","kind":"text"}],"externalID":"s:22ComposableArchitecture13BindableStateV14projectedValueACyxGvp","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","title":"projectedValue","modules":[{"name":"ComposableArchitecture"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"projectedValue","kind":"identifier"},{"kind":"text","text":": "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableState","preciseIdentifier":"s:22ComposableArchitecture13BindableStateV","kind":"typeIdentifier","text":"BindableState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"]}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Use the projected value to derive bindings from a view store with properties annotated with","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@BindableState"},{"text":". To get the ","type":"text"},{"code":"projectedValue","type":"codeVoice"},{"text":", prefix the property with ","type":"text"},{"type":"codeVoice","code":"$"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["TextField(\"Display name\", text: viewStore.binding(\\.$displayName))"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"See "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableState","type":"reference","isActive":true},{"text":" for more details.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"A projection that can be used to derive bindings from a view store.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableState\/projectedValue"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/bindablestate\/projectedvalue"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableState":{"kind":"symbol","type":"topic","title":"BindableState","abstract":[{"text":"A property wrapper type that can designate properties of app state that can be directly bindable","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in SwiftUI views."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableState","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BindableState"}],"url":"\/documentation\/composablearchitecture\/bindablestate","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindableState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","type":"topic","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftui","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableState/projectedValue":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableState\/projectedValue","url":"\/documentation\/composablearchitecture\/bindablestate\/projectedvalue","abstract":[{"text":"A projection that can be used to derive bindings from a view store.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"projectedValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BindableState","preciseIdentifier":"s:22ComposableArchitecture13BindableStateV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"role":"symbol","type":"topic","title":"projectedValue","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}