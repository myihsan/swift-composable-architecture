{"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"observe","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"removeDuplicates"},{"text":": (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")","kind":"text"}],"externalID":"s:22ComposableArchitecture9ViewStoreC_7observe16removeDuplicatesACyxq_GAA0D0Cyqd__q_G_xqd__cSbx_xtctclufc","title":"init(_:observe:removeDuplicates:)","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Initializer","symbolKind":"init","role":"symbol"},"sections":[],"abstract":[{"text":"Initializes a view store from a store which observes changes to state.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"]]},"seeAlsoSections":[{"title":"Creating a view store","anchor":"Creating-a-view-store","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:)-4il0f","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStoreOf"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"store","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"kind":"text","text":" "},{"kind":"internalParam","text":"toViewState"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"removeDuplicates"},{"kind":"text","text":" "},{"text":"isDuplicate","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"store","content":[{"inlineContent":[{"text":"A store.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A transformation of ","type":"text"},{"type":"codeVoice","code":"ViewState"},{"type":"text","text":" to the state that will be observed for"},{"text":" ","type":"text"},{"type":"text","text":"changes."}]}],"name":"toViewState"},{"name":"isDuplicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A function to determine when two "},{"type":"codeVoice","code":"State"},{"type":"text","text":" values are equal. When values are"},{"type":"text","text":" "},{"text":"equal, repeat view computations are removed.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"It is recommended that the "},{"type":"codeVoice","code":"observe"},{"type":"text","text":" argument transform the store’s state into the bare"},{"type":"text","text":" "},{"type":"text","text":"minimum of data needed for the feature to do its job in order to not hinder performance."},{"type":"text","text":" "},{"text":"This is especially true for root level features, and less important for leaf features.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To read more about this performance technique, read the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","isActive":true},{"text":" article.","type":"text"}]}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/composablearchitecture\/viewstore\/init(_:observe:removeduplicates:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","role":"symbol","url":"\/documentation\/composablearchitecture\/store","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"abstract":[{"type":"text","text":"A "},{"code":"ViewStore","type":"codeVoice"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"type":"text","text":" "},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"text":" ","type":"text"},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/viewstore","title":"ViewStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"kind":"symbol","navigatorTitle":[{"text":"ViewStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStoreOf":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ViewStoreOf","kind":"identifier"}],"abstract":[{"text":"A convenience type alias for referring to a view store of a given reducer’s domain.","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStoreOf"}],"type":"topic","url":"\/documentation\/composablearchitecture\/viewstoreof","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStoreOf","title":"ViewStoreOf"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:removeDuplicates:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"State"},{"text":">(","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"observe"},{"text":": (","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewState"},{"text":", ","kind":"text"},{"text":"removeDuplicates","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ViewState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:removeDuplicates:)","kind":"symbol","abstract":[{"text":"Initializes a view store from a store which observes changes to state.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:removeduplicates:)","title":"init(_:observe:removeDuplicates:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"url":"\/documentation\/composablearchitecture\/performance","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","type":"topic","kind":"article","role":"article","abstract":[{"type":"text","text":"Learn how to improve the performance of features built in the Composable Architecture."}],"title":"Performance"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:)-4il0f":{"kind":"symbol","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"ViewState"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[],"fragments":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"type":"topic","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:)-4il0f","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:)-4il0f","title":"init(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/init(_:observe:)":{"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"State"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"observe"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"text":"ViewState","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/init(_:observe:)","kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/init(_:observe:)","title":"init(_:observe:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"ViewState","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}