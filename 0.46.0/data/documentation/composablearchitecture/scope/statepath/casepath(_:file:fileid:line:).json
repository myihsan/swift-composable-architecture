{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"casePath","kind":"identifier"},{"kind":"text","text":"("},{"text":"CasePath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"text":"ParentState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Child"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP5StateQa","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/State","text":"State"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/StatePath"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/scope\/statepath\/casepath(_:file:fileid:line:)"]}],"metadata":{"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"casePath"},{"kind":"text","text":"("},{"text":"CasePath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"text":", ","kind":"text"},{"text":"Child","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP5StateQa"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Case","symbolKind":"case","role":"symbol","externalID":"s:22ComposableArchitecture5ScopeV9StatePathO04caseE0yAEyxq_q0__G9CasePaths0gE0Vyx0D0Qy0_G_s12StaticStringVAOSutcAGmAA15ReducerProtocolR0_r1_lF","title":"Scope.StatePath.casePath(_:file:fileID:line:)"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/StatePath\/casePath(_:file:fileID:line:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/StatePath":{"navigatorTitle":[{"kind":"identifier","text":"StatePath"}],"url":"\/documentation\/composablearchitecture\/scope\/statepath","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/StatePath","type":"topic","kind":"symbol","title":"Scope.StatePath","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StatePath"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/StatePath/casePath(_:file:fileID:line:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/StatePath\/casePath(_:file:fileID:line:)","abstract":[],"kind":"symbol","title":"Scope.StatePath.casePath(_:file:fileID:line:)","role":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"casePath"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath"},{"text":"<","kind":"text"},{"text":"ParentState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Child","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP5StateQa"},{"kind":"text","text":">, "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/scope\/statepath\/casepath(_:file:fileid:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"kind":"symbol","abstract":[{"type":"text","text":"A convenience type alias for referring to an effect that can never fail, like the kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher"},{"type":"text","text":" returned by a reducer after processing an action."}],"navigatorTitle":[{"text":"EffectTask","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"EffectTask","kind":"identifier"}],"title":"EffectTask","url":"\/documentation\/composablearchitecture\/effecttask","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol":{"type":"topic","title":"ReducerProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ReducerProtocol","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask"},{"type":"text","text":"s should be executed later by the store, if"},{"text":" ","type":"text"},{"text":"any.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","navigatorTitle":[{"text":"ReducerProtocol","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol/State":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"required":true,"kind":"symbol","title":"State","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/State","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol\/state","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"abstract":[{"text":"Embeds a child reducer in a parent domain.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","type":"topic","role":"symbol","title":"Scope","url":"\/documentation\/composablearchitecture\/scope","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"kind":"symbol","navigatorTitle":[{"text":"Scope","kind":"identifier"}]}}}