{"variants":[{"paths":["\/documentation\/composablearchitecture\/combine\/publisher\/catchtoeffect()"],"traits":[{"interfaceLanguage":"swift"}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Iterate over 'Publisher.values' in an 'EffectTask.run', instead.","type":"text"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"catchToEffect"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10EffectTaska","text":"EffectTask"},{"kind":"text","text":"<"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:7Combine9PublisherP6OutputQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Failure","preciseIdentifier":"s:7Combine9PublisherP7FailureQa"},{"kind":"text","text":">>"}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"text":"An effect that wraps ","type":"text"},{"code":"self","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be useful when you are working with a failing API but want to deliver its data to an"},{"text":" ","type":"text"},{"type":"text","text":"action that handles both success and failure."}]},{"code":["case .buttonTapped:","  return self.apiClient.fetchUser(id: 1)","    .catchToEffect()","    .map(ProfileAction.userResponse)"],"type":"codeListing","syntax":"swift"}]}],"abstract":[{"type":"text","text":"Turns any publisher into an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask"},{"text":" that cannot fail by wrapping its output and failure","type":"text"},{"type":"text","text":" "},{"text":"in a result.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine\/Publisher"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine\/Publisher\/catchToEffect()"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"title":"catchToEffect()","roleHeading":"Instance Method","platforms":[],"modules":[{"name":"ComposableArchitecture","relatedModules":["Combine"]}],"externalID":"s:7Combine9PublisherP22ComposableArchitectureE13catchToEffectAD0gB0Vys6ResultOy6OutputQz7FailureQzGs5NeverOGyF","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"catchToEffect"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:22ComposableArchitecture10EffectTaska","text":"EffectTask","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Combine9PublisherP6OutputQa","text":"Output","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Failure","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9PublisherP7FailureQa"},{"text":">>","kind":"text"}],"extendedModule":"Combine"},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Combine/Publisher":{"navigatorTitle":[{"kind":"identifier","text":"Publisher"}],"url":"\/documentation\/composablearchitecture\/combine\/publisher","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine\/Publisher","type":"topic","kind":"symbol","title":"Publisher","role":"symbol","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Publisher","preciseIdentifier":"s:7Combine9PublisherP"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Combine":{"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/combine","type":"topic","title":"Combine"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"kind":"symbol","abstract":[{"type":"text","text":"A convenience type alias for referring to an effect that can never fail, like the kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher"},{"type":"text","text":" returned by a reducer after processing an action."}],"navigatorTitle":[{"text":"EffectTask","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"EffectTask","kind":"identifier"}],"title":"EffectTask","url":"\/documentation\/composablearchitecture\/effecttask","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Combine/Publisher/catchToEffect()":{"deprecated":true,"type":"topic","abstract":[{"text":"Turns any publisher into an ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","isActive":true},{"type":"text","text":" that cannot fail by wrapping its output and failure"},{"type":"text","text":" "},{"text":"in a result.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"catchToEffect"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"EffectTask","preciseIdentifier":"s:22ComposableArchitecture10EffectTaska"},{"text":"<","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Output","preciseIdentifier":"s:7Combine9PublisherP6OutputQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Failure","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9PublisherP7FailureQa"},{"text":">>","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine\/Publisher\/catchToEffect()","role":"symbol","url":"\/documentation\/composablearchitecture\/combine\/publisher\/catchtoeffect()","title":"catchToEffect()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectPublisher":{"title":"EffectPublisher","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","abstract":[{"type":"text","text":"A type that encapsulates a unit of work that can be run in the outside world, and can feed"},{"type":"text","text":" "},{"type":"text","text":"actions back to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/effectpublisher","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EffectPublisher"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EffectPublisher"}]}}}