{"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireAndForget","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":", "},{"text":"NewFailure","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"outputType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type = NewOutput.self, "},{"kind":"externalParam","text":"failureType"},{"kind":"text","text":": "},{"text":"NewFailure","kind":"typeIdentifier"},{"text":".Type = NewFailure.self) -> ","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","kind":"typeIdentifier","text":"EffectPublisher","preciseIdentifier":"s:22ComposableArchitecture15EffectPublisherV"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"NewFailure","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"NewFailure","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An output type.","type":"text"}]}],"name":"outputType"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A failure type.","type":"text"}]}],"name":"failureType"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An effect that never produces output or errors."}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This is useful for times you want to fire off an effect but don’t want to feed any data back","type":"text"},{"type":"text","text":" "},{"text":"into the system. It can automatically promote an effect to your reducer’s domain.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["case .buttonTapped:","  return analyticsClient.track(\"Button Tapped\")","    .fireAndForget()"]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine\/Publisher"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine\/Publisher\/fireAndForget(outputType:failureType:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/combine\/publisher\/fireandforget(outputtype:failuretype:)"]}],"abstract":[{"type":"text","text":"Turns any publisher into an "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","isActive":true},{"type":"text","text":" for any output and failure type by ignoring"},{"type":"text","text":" "},{"type":"text","text":"all output and any failure."}],"metadata":{"extendedModule":"Combine","platforms":[],"externalID":"s:7Combine9PublisherP22ComposableArchitectureE13fireAndForget10outputType07failureI0AD06EffectB0Vyqd__qd_0_Gqd__m_qd_0_mts5ErrorRd_0_r0_lF","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","title":"fireAndForget(outputType:failureType:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireAndForget"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"NewOutput"},{"text":", ","kind":"text"},{"text":"NewFailure","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"outputType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type, "},{"text":"failureType","kind":"externalParam"},{"kind":"text","text":": "},{"text":"NewFailure","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:22ComposableArchitecture15EffectPublisherV","text":"EffectPublisher","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewFailure","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"ComposableArchitecture","relatedModules":["Combine"]}]},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Iterate over 'Publisher.values' in the static version of 'Effect.fireAndForget', instead."}],"type":"paragraph"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","role":"symbol","url":"\/documentation\/composablearchitecture\/store","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Combine/Publisher/fireAndForget(outputType:failureType:)":{"kind":"symbol","role":"symbol","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine\/Publisher\/fireAndForget(outputType:failureType:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireAndForget"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"text":", ","kind":"text"},{"text":"NewFailure","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"outputType","kind":"externalParam"},{"kind":"text","text":": "},{"text":"NewOutput","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"failureType"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"NewFailure"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"EffectPublisher","preciseIdentifier":"s:22ComposableArchitecture15EffectPublisherV"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewFailure","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/composablearchitecture\/combine\/publisher\/fireandforget(outputtype:failuretype:)","title":"fireAndForget(outputType:failureType:)","abstract":[{"type":"text","text":"Turns any publisher into an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher"},{"text":" for any output and failure type by ignoring","type":"text"},{"type":"text","text":" "},{"type":"text","text":"all output and any failure."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectPublisher":{"title":"EffectPublisher","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","abstract":[{"type":"text","text":"A type that encapsulates a unit of work that can be run in the outside world, and can feed"},{"type":"text","text":" "},{"type":"text","text":"actions back to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/effectpublisher","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EffectPublisher"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EffectPublisher"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Combine":{"role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/combine","type":"topic","title":"Combine"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Combine/Publisher":{"navigatorTitle":[{"kind":"identifier","text":"Publisher"}],"url":"\/documentation\/composablearchitecture\/combine\/publisher","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine\/Publisher","type":"topic","kind":"symbol","title":"Publisher","role":"symbol","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Publisher","preciseIdentifier":"s:7Combine9PublisherP"}]}}}