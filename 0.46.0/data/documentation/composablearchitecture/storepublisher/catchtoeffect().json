{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"catchToEffect","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:22ComposableArchitecture10EffectTaska","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","text":"EffectTask","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Combine9PublisherP6OutputQa","text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine9PublisherP7FailureQa","text":"Failure"},{"kind":"text","text":">>"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"text":"An effect that wraps ","type":"text"},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be useful when you are working with a failing API but want to deliver its data to an"},{"type":"text","text":" "},{"text":"action that handles both success and failure.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["case .buttonTapped:","  return self.apiClient.fetchUser(id: 1)","    .catchToEffect()","    .map(ProfileAction.userResponse)"]}]}],"metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["Combine"]}],"platforms":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"catchToEffect"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10EffectTaska","text":"EffectTask"},{"kind":"text","text":"<"},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Combine9PublisherP6OutputQa","text":"Output","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Failure","preciseIdentifier":"s:7Combine9PublisherP7FailureQa","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"role":"symbol","extendedModule":"Combine","roleHeading":"Instance Method","title":"catchToEffect()","externalID":"s:7Combine9PublisherP22ComposableArchitectureE13catchToEffectAD0gB0Vys6ResultOy6OutputQz7FailureQzGs5NeverOGyF::SYNTHESIZED::s:22ComposableArchitecture14StorePublisherV","symbolKind":"method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher\/Publisher-Implementations"]]},"abstract":[{"text":"Turns any publisher into an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","type":"reference"},{"text":" that cannot fail by wrapping its output and failure","type":"text"},{"type":"text","text":" "},{"text":"in a result.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Iterate over 'Publisher.values' in an 'EffectTask.run', instead."}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher\/catchToEffect()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/storepublisher\/catchtoeffect()"]}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"kind":"symbol","abstract":[{"type":"text","text":"A convenience type alias for referring to an effect that can never fail, like the kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher"},{"type":"text","text":" returned by a reducer after processing an action."}],"navigatorTitle":[{"text":"EffectTask","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"EffectTask","kind":"identifier"}],"title":"EffectTask","url":"\/documentation\/composablearchitecture\/effecttask","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StorePublisher/Publisher-Implementations":{"url":"\/documentation\/composablearchitecture\/storepublisher\/publisher-implementations","type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher\/Publisher-Implementations","title":"Publisher Implementations","abstract":[],"role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StorePublisher/catchToEffect()":{"abstract":[{"type":"text","text":"Turns any publisher into an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask"},{"type":"text","text":" that cannot fail by wrapping its output and failure"},{"type":"text","text":" "},{"type":"text","text":"in a result."}],"url":"\/documentation\/composablearchitecture\/storepublisher\/catchtoeffect()","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"catchToEffect"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10EffectTaska","text":"EffectTask"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9PublisherP6OutputQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Failure","preciseIdentifier":"s:7Combine9PublisherP7FailureQa","kind":"typeIdentifier"},{"kind":"text","text":">>"}],"title":"catchToEffect()","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher\/catchToEffect()","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectPublisher":{"title":"EffectPublisher","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","abstract":[{"type":"text","text":"A type that encapsulates a unit of work that can be run in the outside world, and can feed"},{"type":"text","text":" "},{"type":"text","text":"actions back to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/effectpublisher","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EffectPublisher"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EffectPublisher"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","role":"symbol","url":"\/documentation\/composablearchitecture\/store","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StorePublisher":{"title":"StorePublisher","abstract":[{"text":"A publisher of store state.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StorePublisher","kind":"identifier"}],"navigatorTitle":[{"text":"StorePublisher","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","role":"symbol","url":"\/documentation\/composablearchitecture\/storepublisher","type":"topic"}}}