{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher\/Publisher-Implementations"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/storepublisher\/fireandforget(outputtype:failuretype:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"deprecationSummary":[{"inlineContent":[{"text":"Iterate over 'Publisher.values' in the static version of 'Effect.fireAndForget', instead.","type":"text"}],"type":"paragraph"}],"abstract":[{"type":"text","text":"Turns any publisher into an "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","isActive":true,"type":"reference"},{"type":"text","text":" for any output and failure type by ignoring"},{"type":"text","text":" "},{"type":"text","text":"all output and any failure."}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher\/fireAndForget(outputType:failureType:)","interfaceLanguage":"swift"},"metadata":{"platforms":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireAndForget"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"NewFailure"},{"kind":"text","text":">("},{"kind":"externalParam","text":"outputType"},{"text":": ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"failureType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NewFailure"},{"text":".Type) -> ","kind":"text"},{"text":"EffectPublisher","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture15EffectPublisherV"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewFailure","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:7Combine9PublisherP22ComposableArchitectureE13fireAndForget10outputType07failureI0AD06EffectB0Vyqd__qd_0_Gqd__m_qd_0_mts5ErrorRd_0_r0_lF::SYNTHESIZED::s:22ComposableArchitecture14StorePublisherV","title":"fireAndForget(outputType:failureType:)","modules":[{"relatedModules":["Combine"],"name":"ComposableArchitecture"}],"extendedModule":"Combine","roleHeading":"Instance Method","symbolKind":"method","role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fireAndForget"},{"kind":"text","text":"<"},{"text":"NewOutput","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"NewFailure","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"outputType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type = NewOutput.self, "},{"kind":"externalParam","text":"failureType"},{"kind":"text","text":": "},{"text":"NewFailure","kind":"typeIdentifier"},{"text":".Type = NewFailure.self) -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture15EffectPublisherV","text":"EffectPublisher","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"NewFailure"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"NewFailure"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An output type."}]}],"name":"outputType"},{"name":"failureType","content":[{"inlineContent":[{"type":"text","text":"A failure type."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An effect that never produces output or errors.","type":"text"}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is useful for times you want to fire off an effect but don’t want to feed any data back"},{"text":" ","type":"text"},{"type":"text","text":"into the system. It can automatically promote an effect to your reducer’s domain."}]},{"type":"codeListing","syntax":"swift","code":["case .buttonTapped:","  return analyticsClient.track(\"Button Tapped\")","    .fireAndForget()"]}],"kind":"content"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/StorePublisher":{"title":"StorePublisher","abstract":[{"text":"A publisher of store state.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StorePublisher","kind":"identifier"}],"navigatorTitle":[{"text":"StorePublisher","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","role":"symbol","url":"\/documentation\/composablearchitecture\/storepublisher","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectPublisher":{"title":"EffectPublisher","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","abstract":[{"type":"text","text":"A type that encapsulates a unit of work that can be run in the outside world, and can feed"},{"type":"text","text":" "},{"type":"text","text":"actions back to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/effectpublisher","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EffectPublisher"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EffectPublisher"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StorePublisher/Publisher-Implementations":{"url":"\/documentation\/composablearchitecture\/storepublisher\/publisher-implementations","type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher\/Publisher-Implementations","title":"Publisher Implementations","abstract":[],"role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StorePublisher/fireAndForget(outputType:failureType:)":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher\/fireAndForget(outputType:failureType:)","deprecated":true,"title":"fireAndForget(outputType:failureType:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireAndForget"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"text":", ","kind":"text"},{"text":"NewFailure","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"outputType"},{"kind":"text","text":": "},{"text":"NewOutput","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"text":"failureType","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NewFailure"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:22ComposableArchitecture15EffectPublisherV","kind":"typeIdentifier","text":"EffectPublisher"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":", "},{"text":"NewFailure","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Turns any publisher into an "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","type":"reference","isActive":true},{"text":" for any output and failure type by ignoring","type":"text"},{"type":"text","text":" "},{"type":"text","text":"all output and any failure."}],"url":"\/documentation\/composablearchitecture\/storepublisher\/fireandforget(outputtype:failuretype:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"around to views that need to interact with the application."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","role":"symbol","url":"\/documentation\/composablearchitecture\/store","type":"topic"}}}