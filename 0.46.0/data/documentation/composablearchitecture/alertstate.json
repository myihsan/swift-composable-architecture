{"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AlertState"}],"symbolKind":"struct","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Structure","title":"AlertState","navigatorTitle":[{"kind":"identifier","text":"AlertState"}],"externalID":"s:22ComposableArchitecture10AlertStateV"},"topicSections":[{"anchor":"Structures","title":"Structures","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/Button","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/ButtonAction"],"generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/init(title:message:buttons:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/init(title:message:dismissButton:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/init(title:message:primaryButton:secondaryButton:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"generated":true,"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/buttons","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/id","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/message","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/title"]},{"title":"Enumerations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/ButtonRole"],"generated":true,"anchor":"Enumerations"},{"anchor":"Default-Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/CustomDumpReflectable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/Hashable-Implementations"],"title":"Default Implementations","generated":true}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI"]]},"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/10CustomDump0aB11ReflectableP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s12IdentifiableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"seeAlsoSections":[{"title":"View state","generated":true,"anchor":"View-state","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ConfirmationDialogState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AlertState","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"genericParameter"},{"text":">","kind":"text"}]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This type can be used in your application’s state in order to control the presentation or"},{"type":"text","text":" "},{"type":"text","text":"dismissal of alerts. It is preferable to use this API instead of the default SwiftUI API"},{"type":"text","text":" "},{"text":"for alerts because SwiftUI uses 2-way bindings in order to control the showing and dismissal","type":"text"},{"type":"text","text":" "},{"text":"of alerts, and that does not play nicely with the Composable Architecture. The library requires","type":"text"},{"type":"text","text":" "},{"text":"that all state mutations happen by sending an action so that a reducer can handle that logic,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"which greatly simplifies how data flows through your application, and gives you instant"},{"type":"text","text":" "},{"type":"text","text":"testability on all parts of your application."}]},{"type":"paragraph","inlineContent":[{"text":"To use this API, you model all the alert actions in your domain’s action enum:","type":"text"}]},{"code":["enum Action: Equatable {","  case cancelTapped","  case confirmTapped","  case deleteTapped","","  \/\/ Your other actions","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"And you model the state for showing the alert in your domain’s state, and it can start off"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":":"}]},{"code":["struct State: Equatable {","  var alert: AlertState<Action>?","","  \/\/ Your other state","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then, in the reducer you can construct an "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState","isActive":true,"type":"reference"},{"type":"text","text":" value to represent the alert you want"},{"text":" ","type":"text"},{"type":"text","text":"to show to the user:"}]},{"code":["func reduce(into state: inout State, action: Action) -> EffectTask<Action> {","  switch action {","  case .cancelTapped:","    state.alert = nil","    return .none","","  case .confirmTapped:","    state.alert = nil","    \/\/ Do deletion logic...","","  case .deleteTapped:","    state.alert = AlertState(","      title: TextState(\"Delete\"),","      message: TextState(\"Are you sure you want to delete this? It cannot be undone.\"),","      primaryButton: .default(TextState(\"Confirm\"), action: .send(.confirmTapped)),","      secondaryButton: .cancel(TextState(\"Cancel\"))","    )","    return .none","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"And then, in your view you can use the ","type":"text"},{"type":"codeVoice","code":".alert(_:send:dismiss:)"},{"type":"text","text":" method on "},{"code":"View","type":"codeVoice"},{"text":" in order","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to present the alert in a way that works best with the Composable Architecture:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["Button(\"Delete\") { viewStore.send(.deleteTapped) }","  .alert(","    self.store.scope(state: \\.alert),","    dismiss: .cancelTapped","  )"]},{"inlineContent":[{"type":"text","text":"This makes your reducer in complete control of when the alert is shown or dismissed, and makes"},{"type":"text","text":" "},{"type":"text","text":"it so that any choice made in the alert is automatically fed back into the reducer so that you"},{"type":"text","text":" "},{"type":"text","text":"can handle its logic."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Even better, you can instantly write tests that your alert behavior works as expected:"}]},{"code":["let store = TestStore(","  initialState: Feature.State(),","  reducer: Feature()",")","","store.send(.deleteTapped) {","  $0.alert = AlertState(","    title: TextState(\"Delete\"),","    message: TextState(\"Are you sure you want to delete this? It cannot be undone.\"),","    primaryButton: .default(TextState(\"Confirm\"), action: .send(.confirmTapped)),","    secondaryButton: .cancel(TextState(\"Cancel\"))","  )","}","store.send(.confirmTapped) {","  $0.alert = nil","  \/\/ Also verify that delete logic executed correctly","}"],"syntax":"swift","type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/alertstate"]}],"abstract":[{"text":"A data type that describes the state of an alert that can be shown to the user. The ","type":"text"},{"type":"codeVoice","code":"Action"},{"type":"text","text":" "},{"text":"generic is the type of actions that can be sent from tapping on a button in the alert.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState"},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/Button":{"kind":"symbol","title":"AlertState.Button","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Button","kind":"identifier"}],"navigatorTitle":[{"text":"Button","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/alertstate\/button","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/Button","abstract":[],"type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/init(title:message:primaryButton:secondaryButton:)":{"url":"\/documentation\/composablearchitecture\/alertstate\/init(title:message:primarybutton:secondarybutton:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/init(title:message:primaryButton:secondaryButton:)","abstract":[],"kind":"symbol","title":"init(title:message:primaryButton:secondaryButton:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"title","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9TextStateV","text":"TextState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"message","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TextStateV","text":"TextState"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"primaryButton"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV","text":"AlertState"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">.","kind":"text"},{"text":"Button","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV6ButtonV"},{"kind":"text","text":", "},{"text":"secondaryButton","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AlertState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">.","kind":"text"},{"text":"Button","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV6ButtonV"},{"kind":"text","text":")"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/ButtonRole":{"title":"AlertState.ButtonRole","navigatorTitle":[{"kind":"identifier","text":"ButtonRole"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/alertstate\/buttonrole","abstract":[],"kind":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ButtonRole"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/ButtonRole"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState":{"type":"topic","url":"\/documentation\/composablearchitecture\/textstate","kind":"symbol","abstract":[{"type":"text","text":"An equatable description of SwiftUI "},{"code":"Text","type":"codeVoice"},{"type":"text","text":". Useful for storing rich text in state for the"},{"type":"text","text":" "},{"text":"purpose of rendering in a view hierarchy.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TextState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","title":"TextState","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TextState"}]},"doc://ComposableArchitecture/SQ":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/title":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"title","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9TextStateV","kind":"typeIdentifier","text":"TextState"}],"abstract":[],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/title","title":"title","url":"\/documentation\/composablearchitecture\/alertstate\/title","kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/Hashable-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/Hashable-Implementations","abstract":[],"kind":"article","url":"\/documentation\/composablearchitecture\/alertstate\/hashable-implementations","type":"topic","title":"Hashable Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/init(title:message:buttons:)":{"url":"\/documentation\/composablearchitecture\/alertstate\/init(title:message:buttons:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"title"},{"kind":"text","text":": "},{"text":"TextState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TextStateV"},{"kind":"text","text":", "},{"text":"message","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9TextStateV","text":"TextState","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"buttons"},{"kind":"text","text":": ["},{"text":"AlertState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture10AlertStateV6ButtonV","kind":"typeIdentifier","text":"Button"},{"kind":"text","text":"])"}],"title":"init(title:message:buttons:)","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/init(title:message:buttons:)","type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/buttons":{"kind":"symbol","type":"topic","title":"buttons","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/buttons","role":"symbol","url":"\/documentation\/composablearchitecture\/alertstate\/buttons","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buttons","kind":"identifier"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV","text":"AlertState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">."},{"preciseIdentifier":"s:22ComposableArchitecture10AlertStateV6ButtonV","kind":"typeIdentifier","text":"Button"},{"text":"]","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/init(title:message:dismissButton:)":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"title","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TextState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TextStateV"},{"text":", ","kind":"text"},{"text":"message","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TextStateV","text":"TextState"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"dismissButton"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture10AlertStateV","text":"AlertState","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">."},{"text":"Button","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10AlertStateV6ButtonV"},{"kind":"text","text":"?)"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/alertstate\/init(title:message:dismissbutton:)","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/init(title:message:dismissButton:)","title":"init(title:message:dismissButton:)","role":"symbol"},"doc://ComposableArchitecture/s8CopyableP":{"title":"Swift.Copyable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP"},"doc://ComposableArchitecture/10CustomDump0aB11ReflectableP":{"title":"CustomDump.CustomDumpReflectable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/10CustomDump0aB11ReflectableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","type":"topic","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftui","role":"collectionGroup"},"doc://ComposableArchitecture/s12IdentifiableP":{"title":"Swift.Identifiable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s12IdentifiableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/message":{"url":"\/documentation\/composablearchitecture\/alertstate\/message","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"message","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TextStateV","text":"TextState"},{"kind":"text","text":"?"}],"role":"symbol","type":"topic","title":"message","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/message","abstract":[],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ConfirmationDialogState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ConfirmationDialogState","navigatorTitle":[{"text":"ConfirmationDialogState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/confirmationdialogstate","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConfirmationDialogState"}],"kind":"symbol","type":"topic","abstract":[{"text":"A data type that describes the state of a confirmation dialog that can be shown to the user. The","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Action"},{"text":" generic is the type of actions that can be sent from tapping on a button in the sheet.","type":"text"}],"title":"ConfirmationDialogState","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/ButtonAction":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/ButtonAction","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ButtonAction"}],"type":"topic","title":"AlertState.ButtonAction","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ButtonAction","kind":"identifier"}],"abstract":[],"url":"\/documentation\/composablearchitecture\/alertstate\/buttonaction","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/Equatable-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/Equatable-Implementations","kind":"article","type":"topic","abstract":[],"url":"\/documentation\/composablearchitecture\/alertstate\/equatable-implementations","title":"Equatable Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/CustomDumpReflectable-Implementations":{"title":"CustomDumpReflectable Implementations","url":"\/documentation\/composablearchitecture\/alertstate\/customdumpreflectable-implementations","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/CustomDumpReflectable-Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState/id":{"type":"topic","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UUID","preciseIdentifier":"s:10Foundation4UUIDV"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/alertstate\/id","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState\/id","title":"id","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState":{"title":"AlertState","role":"symbol","url":"\/documentation\/composablearchitecture\/alertstate","abstract":[{"text":"A data type that describes the state of an alert that can be shown to the user. The ","type":"text"},{"type":"codeVoice","code":"Action"},{"text":" ","type":"text"},{"type":"text","text":"generic is the type of actions that can be sent from tapping on a button in the alert."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AlertState"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AlertState","kind":"identifier"}]},"doc://ComposableArchitecture/SH":{"identifier":"doc:\/\/ComposableArchitecture\/SH","type":"unresolvable","title":"Swift.Hashable"}}}