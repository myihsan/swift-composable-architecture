{"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"ReducerProtocol.reduce(into:action:)","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/composablearchitecture\/swift\/optional\/reduce(into:action:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"kind":"text","text":" "},{"kind":"internalParam","text":"state"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP5StateQa","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/State"},{"kind":"text","text":", "},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Wrapped","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP6ActionQa","text":"Action","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/Action","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10EffectTaska","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","text":"EffectTask"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Wrapped"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Action","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/Action","preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP6ActionQa"},{"kind":"text","text":">"}]}]}],"metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["Swift"]}],"externalID":"s:Sq22ComposableArchitectureAA15ReducerProtocolRzlE6reduce4into6actionAA15EffectPublisherVy6ActionQzs5NeverOG5StateQzz_AItF","title":"reduce(into:action:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ReducerProtocol"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reduce"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":"."},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP5StateQa"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Wrapped","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP6ActionQa","kind":"typeIdentifier","text":"Action"},{"text":") -> ","kind":"text"},{"text":"EffectTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10EffectTaska"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP6ActionQa","text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","extendedModule":"Swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/ReducerProtocol-Implementations"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/reduce(into:action:)","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift":{"url":"\/documentation\/composablearchitecture\/swift","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift","title":"Swift","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol/Action":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Action"}],"required":true,"kind":"symbol","title":"Action","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/Action","abstract":[{"type":"text","text":"A type that holds all possible actions that cause the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/State","isActive":true},{"text":" of the reducer to change","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and\/or kick off a side "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","type":"reference","isActive":true},{"type":"text","text":" that can communicate with the outside world."}],"url":"\/documentation\/composablearchitecture\/reducerprotocol\/action","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectPublisher":{"title":"EffectPublisher","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher","abstract":[{"type":"text","text":"A type that encapsulates a unit of work that can be run in the outside world, and can feed"},{"type":"text","text":" "},{"type":"text","text":"actions back to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/effectpublisher","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EffectPublisher"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EffectPublisher"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional/ReducerProtocol-Implementations":{"url":"\/documentation\/composablearchitecture\/swift\/optional\/reducerprotocol-implementations","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/ReducerProtocol-Implementations","title":"ReducerProtocol Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional/reduce(into:action:)":{"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ReducerProtocol"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Wrapped","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP5StateQa","text":"State"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP6ActionQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EffectTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10EffectTaska"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture15ReducerProtocolP6ActionQa","text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/swift\/optional\/reduce(into:action:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/reduce(into:action:)","title":"reduce(into:action:)","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","role":"symbol","navigatorTitle":[{"text":"Optional","kind":"identifier"}],"kind":"symbol","title":"Optional","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"Optional","kind":"identifier","preciseIdentifier":"s:Sq"}],"url":"\/documentation\/composablearchitecture\/swift\/optional","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"kind":"symbol","abstract":[{"type":"text","text":"A convenience type alias for referring to an effect that can never fail, like the kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher"},{"type":"text","text":" returned by a reducer after processing an action."}],"navigatorTitle":[{"text":"EffectTask","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"EffectTask","kind":"identifier"}],"title":"EffectTask","url":"\/documentation\/composablearchitecture\/effecttask","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol/State":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"required":true,"kind":"symbol","title":"State","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/State","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol\/state","role":"symbol"}}}