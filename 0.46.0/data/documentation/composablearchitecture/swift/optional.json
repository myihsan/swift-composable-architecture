{"topicSections":[{"anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/ReducerProtocol-Implementations"],"title":"Default Implementations"}],"metadata":{"role":"symbol","title":"Optional","extendedModule":"Swift","externalID":"s:e:s:Sq22ComposableArchitectureAA15ReducerProtocolRzlE6reduce4into6actionAA15EffectPublisherVy6ActionQzs5NeverOG5StateQzz_AItF","symbolKind":"extension","roleHeading":"Extended Enumeration","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","preciseIdentifier":"s:Sq","text":"Optional"}],"modules":[{"name":"ComposableArchitecture","relatedModules":["Swift"]}],"navigatorTitle":[{"text":"Optional","kind":"identifier"}]},"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","doc:\/\/ComposableArchitecture\/s8CopyableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift"]]},"variants":[{"paths":["\/documentation\/composablearchitecture\/swift\/optional"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sq","text":"Optional","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","references":{"doc://ComposableArchitecture/s8CopyableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol":{"title":"ReducerProtocol","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReducerProtocol"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ReducerProtocol","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/composablearchitecture\/reducerprotocol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReducerProtocol","kind":"identifier"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","isActive":true},{"type":"text","text":"s should be executed later by the store, if"},{"type":"text","text":" "},{"text":"any.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional/ReducerProtocol-Implementations":{"url":"\/documentation\/composablearchitecture\/swift\/optional\/reducerprotocol-implementations","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/ReducerProtocol-Implementations","title":"ReducerProtocol Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift":{"url":"\/documentation\/composablearchitecture\/swift","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift","title":"Swift","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","role":"symbol","navigatorTitle":[{"text":"Optional","kind":"identifier"}],"kind":"symbol","title":"Optional","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"Optional","kind":"identifier","preciseIdentifier":"s:Sq"}],"url":"\/documentation\/composablearchitecture\/swift\/optional","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"kind":"symbol","abstract":[{"type":"text","text":"A convenience type alias for referring to an effect that can never fail, like the kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher"},{"type":"text","text":" returned by a reducer after processing an action."}],"navigatorTitle":[{"text":"EffectTask","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"EffectTask","kind":"identifier"}],"title":"EffectTask","url":"\/documentation\/composablearchitecture\/effecttask","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}