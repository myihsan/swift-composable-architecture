{"variants":[{"paths":["\/documentation\/composablearchitecture\/actorisolated\/setvalue(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Overwrite the isolated value with a new value."}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","title":"setValue(_:)","symbolKind":"method","externalID":"s:22ComposableArchitecture13ActorIsolatedC8setValueyyxF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setValue"},{"kind":"text","text":"("},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActorIsolated"]]},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActorIsolated\/setValue(_:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"setValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"newValue","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to replace the current isolated value with."}]}],"name":"newValue"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Useful for setting an actor-isolated value when a tested dependency runs."}]},{"type":"codeListing","syntax":"swift","code":["let didOpenSettings = ActorIsolated(false)","store.dependencies.openSettings = { await didOpenSettings.setValue(true) }","","await store.send(.settingsButtonTapped)","","await didOpenSettings.withValue { XCTAssertTrue($0) }"]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ActorIsolated":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ActorIsolated"}],"url":"\/documentation\/composablearchitecture\/actorisolated","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A generic wrapper for isolating a mutable value to an actor."}],"navigatorTitle":[{"text":"ActorIsolated","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActorIsolated","title":"ActorIsolated","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ActorIsolated/setValue(_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActorIsolated\/setValue(_:)","kind":"symbol","type":"topic","title":"setValue(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/actorisolated\/setvalue(_:)","abstract":[{"type":"text","text":"Overwrite the isolated value with a new value."}],"role":"symbol"}}}