{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/anyreducer\/signpost(_:log:)"]}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/signpost(_:log:)","interfaceLanguage":"swift"},"abstract":[{"text":"Instruments the reducer with","type":"text"},{"type":"text","text":" "},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","type":"reference"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Each invocation of the reducer will be measured by an interval, and the lifecycle of its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"effects will be measured with interval and event signposts."}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","platforms":[],"extendedModule":"ComposableArchitecture","externalID":"s:22ComposableArchitecture10AnyReducerV8signpost_3logACyxq_q0_GSS_So06OS_os_F0CtF","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"signpost","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"log"},{"kind":"text","text":": "},{"text":"OSLog","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)OS_os_log"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"Environment","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"signpost(_:log:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"signpost","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"prefix"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" = \"\", "},{"text":"log","kind":"externalParam"},{"kind":"text","text":": "},{"text":"OSLog","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)OS_os_log"},{"kind":"text","text":" = OSLog(\n      subsystem: \"co.pointfree.composable-architecture\",\n      category: \"Reducer Instrumentation\"\n    )) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV","text":"AnyReducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":">"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A string to print at the beginning of the formatted message for the signpost."}]}],"name":"prefix"},{"name":"log","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"OSLog"},{"type":"text","text":" to use for signposts."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A reducer that has been enhanced with instrumentation."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"text":"To use, build your app for Instruments (⌘I), create a blank instrument, and then use the “+”","type":"text"},{"type":"text","text":" "},{"text":"icon at top right to add the signpost instrument. Start recording your app (red button at top","type":"text"},{"text":" ","type":"text"},{"text":"left) and then you should see timing information for every action sent to the store and every","type":"text"},{"type":"text","text":" "},{"text":"effect executed.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Effect instrumentation can be particularly useful for inspecting the lifecycle of long-living"},{"text":" ","type":"text"},{"type":"text","text":"effects. For example, if you start an effect (e.g. a location manager) in "},{"type":"codeVoice","code":"onAppear"},{"type":"text","text":" and"},{"type":"text","text":" "},{"text":"forget to tear down the effect in ","type":"text"},{"code":"onDisappear","type":"codeVoice"},{"type":"text","text":", it will clearly show in Instruments that the"},{"text":" ","type":"text"},{"type":"text","text":"effect never completed."}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"\n      This API has been soft-deprecated in favor of 'ReducerProtocol.signpost'. Read the migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/reducerprotocol\n      ","type":"text"}]}],"references":{"https://developer.apple.com/documentation/os/logging/recording_performance_data":{"url":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","titleInlineContent":[{"text":"signposts","type":"text"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","title":"signposts"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerDeprecations":{"abstract":[{"type":"text","text":"Review unsupported reducer APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerDeprecations","type":"topic","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/reducerdeprecations","title":"Deprecations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingToTheReducerProtocol":{"abstract":[{"type":"text","text":"Learn how to migrate existing applications to use the new "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","type":"reference","isActive":true},{"type":"text","text":", in both Swift 5.7 and"},{"text":" ","type":"text"},{"type":"text","text":"Swift 5.6."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol","type":"topic","role":"article","title":"Migrating to the reducer protocol","url":"\/documentation\/composablearchitecture\/migratingtothereducerprotocol","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyReducer":{"abstract":[{"type":"text","text":"This API has been soft-deprecated in favor of "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","isActive":true,"type":"reference"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Read ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol","type":"reference","isActive":true},{"text":" for more information.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer","deprecated":true,"type":"topic","role":"symbol","title":"AnyReducer","url":"\/documentation\/composablearchitecture\/anyreducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyReducer"}],"kind":"symbol","navigatorTitle":[{"text":"AnyReducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"kind":"symbol","abstract":[{"type":"text","text":"A convenience type alias for referring to an effect that can never fail, like the kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher"},{"type":"text","text":" returned by a reducer after processing an action."}],"navigatorTitle":[{"text":"EffectTask","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"EffectTask","kind":"identifier"}],"title":"EffectTask","url":"\/documentation\/composablearchitecture\/effecttask","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyReducer/signpost(_:log:)":{"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/signpost(_:log:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Instruments the reducer with"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each invocation of the reducer will be measured by an interval, and the lifecycle of its"},{"text":" ","type":"text"},{"text":"effects will be measured with interval and event signposts.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/anyreducer\/signpost(_:log:)","title":"signpost(_:log:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"signpost"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"log","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)OS_os_log","text":"OSLog"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"text":"Environment","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol":{"type":"topic","title":"ReducerProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ReducerProtocol","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask"},{"type":"text","text":"s should be executed later by the store, if"},{"text":" ","type":"text"},{"text":"any.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","navigatorTitle":[{"text":"ReducerProtocol","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol"}}}