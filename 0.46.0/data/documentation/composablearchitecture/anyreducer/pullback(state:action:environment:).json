{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"platforms":[],"role":"symbol","symbolKind":"method","externalID":"s:22ComposableArchitecture10AnyReducerV8pullback5state6action11environmentACyqd__qd_0_qd_1_Gs15WritableKeyPathCyqd__xG_9CasePaths0lK0Vyqd_0_q_Gq0_qd_1_ctr1_lF","title":"pullback(state:action:environment:)","roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"pullback","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ParentState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ParentAction"},{"text":", ","kind":"text"},{"text":"ParentEnvironment","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"text":"ParentState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentAction","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"environment"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ParentEnvironment"},{"text":") -> ","kind":"text"},{"text":"Environment","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ParentAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ParentEnvironment"},{"text":">","kind":"text"}]},"kind":"symbol","abstract":[{"type":"text","text":"This API has been soft-deprecated in favor of "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","type":"reference"},{"type":"text","text":". Read"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol","type":"reference","isActive":true},{"type":"text","text":" for more information."}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"\n      This API has been soft-deprecated in favor of 'Scope'. Read the migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/reducerprotocol\n      "}],"type":"paragraph"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"pullback","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ParentState"},{"kind":"text","text":", "},{"text":"ParentAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ParentEnvironment","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"toChildState","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"text":"ParentState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"action","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"toChildAction"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"environment","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"toChildEnvironment","kind":"internalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"ParentEnvironment"},{"text":") -> ","kind":"text"},{"text":"Environment","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AnyReducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ParentAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ParentEnvironment","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"toChildState","content":[{"inlineContent":[{"text":"A key path that can get\/set ","type":"text"},{"code":"State","type":"codeVoice"},{"type":"text","text":" inside "},{"code":"ParentState","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"A case path that can extract\/embed "},{"code":"Action","type":"codeVoice"},{"type":"text","text":" from "},{"code":"ParentAction","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"toChildAction"},{"name":"toChildEnvironment","content":[{"inlineContent":[{"text":"A function that transforms ","type":"text"},{"code":"ParentEnvironment","type":"codeVoice"},{"text":" into ","type":"text"},{"code":"Environment","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A reducer that works on "},{"type":"codeVoice","code":"ParentState"},{"text":", ","type":"text"},{"code":"ParentAction","type":"codeVoice"},{"type":"text","text":", "},{"code":"ParentEnvironment","type":"codeVoice"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Transforms a reducer that works on child state, action, and environment into one that works on","type":"text"},{"text":" ","type":"text"},{"text":"parent state, action and environment. It accomplishes this by providing 3 transformations to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the method:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A writable key path that can get\/set a piece of child state from the parent state."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A case path that can extract\/embed a child action into a parent action."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A function that can transform the parent environment into a child environment."}]}]}]},{"inlineContent":[{"type":"text","text":"This operation is important for breaking down large reducers into small ones. When used with"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/combine(_:)-y8ee","isActive":true},{"type":"text","text":" operator you can define many reducers that work on small pieces of"},{"type":"text","text":" "},{"type":"text","text":"domain, and then "},{"type":"emphasis","inlineContent":[{"text":"pull them back","type":"text"}]},{"text":" and ","type":"text"},{"inlineContent":[{"type":"text","text":"combine"}],"type":"emphasis"},{"type":"text","text":" them into one big reducer that works on a"},{"type":"text","text":" "},{"type":"text","text":"large domain."}],"type":"paragraph"},{"code":["\/\/ Global domain that holds a child domain:","struct AppState { var settings: SettingsState, \/* rest of state *\/ }","enum AppAction { case settings(SettingsAction), \/* other actions *\/ }","struct AppEnvironment { var settings: SettingsEnvironment, \/* rest of dependencies *\/ }","","\/\/ A reducer that works on the child domain:","let settingsReducer = AnyReducer<SettingsState, SettingsAction, SettingsEnvironment> { ... }","","\/\/ Pullback the settings reducer so that it works on all of the app domain:","let appReducer = AnyReducer<AppState, AppAction, AppEnvironment>.combine(","  settingsReducer.pullback(","    state: \\.settings,","    action: \/AppAction.settings,","    environment: { $0.settings }","  ),","","  \/* other reducers *\/",")"],"type":"codeListing","syntax":"swift"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/pullback(state:action:environment:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/anyreducer\/pullback(state:action:environment:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"kind":"symbol","abstract":[{"type":"text","text":"A convenience type alias for referring to an effect that can never fail, like the kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher"},{"type":"text","text":" returned by a reducer after processing an action."}],"navigatorTitle":[{"text":"EffectTask","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"EffectTask","kind":"identifier"}],"title":"EffectTask","url":"\/documentation\/composablearchitecture\/effecttask","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"abstract":[{"type":"text","text":"A result builder for combining reducers into a single reducer by running each, one after the"},{"type":"text","text":" "},{"text":"other, and returning their merged effects.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","type":"topic","role":"symbol","title":"ReducerBuilder","url":"\/documentation\/composablearchitecture\/reducerbuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReducerBuilder"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReducerBuilder"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyReducer/pullback(state:action:environment:)":{"abstract":[{"text":"This API has been soft-deprecated in favor of ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true},{"type":"text","text":". Read"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol"},{"text":" for more information.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/pullback(state:action:environment:)","deprecated":true,"type":"topic","role":"symbol","title":"pullback(state:action:environment:)","url":"\/documentation\/composablearchitecture\/anyreducer\/pullback(state:action:environment:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"pullback"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ParentState"},{"text":", ","kind":"text"},{"text":"ParentAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ParentEnvironment"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ParentState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">, "},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"text":"ParentAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"environment"},{"kind":"text","text":": ("},{"text":"ParentEnvironment","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Environment"},{"kind":"text","text":") -> "},{"text":"AnyReducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ParentState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ParentAction"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ParentEnvironment"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingToTheReducerProtocol":{"abstract":[{"type":"text","text":"Learn how to migrate existing applications to use the new "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","type":"reference","isActive":true},{"type":"text","text":", in both Swift 5.7 and"},{"text":" ","type":"text"},{"type":"text","text":"Swift 5.6."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol","type":"topic","role":"article","title":"Migrating to the reducer protocol","url":"\/documentation\/composablearchitecture\/migratingtothereducerprotocol","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"abstract":[{"text":"Embeds a child reducer in a parent domain.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","type":"topic","role":"symbol","title":"Scope","url":"\/documentation\/composablearchitecture\/scope","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"kind":"symbol","navigatorTitle":[{"text":"Scope","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerDeprecations":{"abstract":[{"type":"text","text":"Review unsupported reducer APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerDeprecations","type":"topic","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/reducerdeprecations","title":"Deprecations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol":{"type":"topic","title":"ReducerProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ReducerProtocol","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask"},{"type":"text","text":"s should be executed later by the store, if"},{"text":" ","type":"text"},{"text":"any.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","navigatorTitle":[{"text":"ReducerProtocol","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyReducer/combine(_:)-y8ee":{"role":"symbol","kind":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/anyreducer\/combine(_:)-y8ee","title":"combine(_:)","type":"topic","abstract":[{"type":"text","text":"This API has been soft-deprecated in favor of combining reducers in a "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","type":"reference"},{"text":". Read","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol"},{"type":"text","text":" for more information."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combine"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV","text":"AnyReducer"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Environment"},{"text":">...) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10AnyReducerV","text":"AnyReducer"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"Environment","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer\/combine(_:)-y8ee"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyReducer":{"abstract":[{"type":"text","text":"This API has been soft-deprecated in favor of "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","isActive":true,"type":"reference"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Read ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingToTheReducerProtocol","type":"reference","isActive":true},{"text":" for more information.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyReducer","deprecated":true,"type":"topic","role":"symbol","title":"AnyReducer","url":"\/documentation\/composablearchitecture\/anyreducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyReducer"}],"kind":"symbol","navigatorTitle":[{"text":"AnyReducer","kind":"identifier"}]}}}