{"metadata":{"symbolKind":"struct","title":"EmptyReducer","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmptyReducer"}],"externalID":"s:22ComposableArchitecture12EmptyReducerV","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EmptyReducer"}],"modules":[{"name":"ComposableArchitecture"}]},"seeAlsoSections":[{"title":"Supporting reducers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce"],"anchor":"Supporting-reducers","generated":true}],"variants":[{"paths":["\/documentation\/composablearchitecture\/emptyreducer"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"anchor":"Initializers","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/reduce(into:action:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/ReducerProtocol-Implementations"],"anchor":"Default-Implementations"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"A reducer that does nothing."}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyReducer"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Action"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While not very useful on its own, "},{"type":"codeVoice","code":"EmptyReducer"},{"text":" can be used as a placeholder in APIs that hold","type":"text"},{"text":" ","type":"text"},{"text":"reducers.","type":"text"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"kind":"symbol","abstract":[{"type":"text","text":"A reducer that updates bindable state when it receives binding actions."}],"navigatorTitle":[{"kind":"identifier","text":"BindingReducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BindingReducer","kind":"identifier"}],"title":"BindingReducer","url":"\/documentation\/composablearchitecture\/bindingreducer","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol":{"type":"topic","title":"ReducerProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ReducerProtocol","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask"},{"type":"text","text":"s should be executed later by the store, if"},{"text":" ","type":"text"},{"text":"any.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","navigatorTitle":[{"text":"ReducerProtocol","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer/reduce(into:action:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/reduce(into:action:)","title":"reduce(into:action:)","type":"topic","abstract":[],"url":"\/documentation\/composablearchitecture\/emptyreducer\/reduce(into:action:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reduce"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:22ComposableArchitecture10EffectTaska","text":"EffectTask","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer/init()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/init()","kind":"symbol","type":"topic","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Initializes a reducer that does nothing."}],"url":"\/documentation\/composablearchitecture\/emptyreducer\/init()","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers":{"url":"\/documentation\/composablearchitecture\/combinereducers","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CombineReducers","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Combines multiple reducers into a single reducer."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","kind":"symbol","title":"CombineReducers","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CombineReducers"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EmptyReducer"}],"type":"topic","title":"EmptyReducer","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyReducer"}],"url":"\/documentation\/composablearchitecture\/emptyreducer","abstract":[{"type":"text","text":"A reducer that does nothing."}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectTask":{"kind":"symbol","abstract":[{"type":"text","text":"A convenience type alias for referring to an effect that can never fail, like the kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectPublisher"},{"type":"text","text":" returned by a reducer after processing an action."}],"navigatorTitle":[{"text":"EffectTask","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectTask","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"EffectTask","kind":"identifier"}],"title":"EffectTask","url":"\/documentation\/composablearchitecture\/effecttask","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer/ReducerProtocol-Implementations":{"url":"\/documentation\/composablearchitecture\/emptyreducer\/reducerprotocol-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/ReducerProtocol-Implementations","kind":"article","title":"ReducerProtocol Implementations","role":"collectionGroup","abstract":[],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reduce":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reduce"}],"type":"topic","title":"Reduce","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Reduce","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reduce","abstract":[{"type":"text","text":"A type-erased reducer that invokes the given "},{"code":"reduce","type":"codeVoice"},{"type":"text","text":" function."}],"role":"symbol"}}}