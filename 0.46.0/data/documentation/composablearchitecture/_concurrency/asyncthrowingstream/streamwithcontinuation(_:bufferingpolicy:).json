{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/_concurrency\/asyncthrowingstream\/streamwithcontinuation(_:bufferingpolicy:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"streamWithContinuation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"elementType","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".Type = Element.self, ","kind":"text"},{"text":"bufferingPolicy","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"limit"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"text":">.","kind":"text"},{"text":"Continuation","preciseIdentifier":"s:Scs12ContinuationV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"BufferingPolicy","kind":"typeIdentifier","preciseIdentifier":"s:Scs12ContinuationV15BufferingPolicyO"},{"kind":"text","text":" = .unbounded) -> (stream"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Scs","text":"AsyncThrowingStream","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">, continuation","kind":"text"},{"text":": ","kind":"text"},{"text":"AsyncThrowingStream","preciseIdentifier":"s:Scs","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Continuation","kind":"typeIdentifier","preciseIdentifier":"s:Scs12ContinuationV"},{"text":")","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The type of element the "},{"type":"codeVoice","code":"AsyncThrowingStream"},{"type":"text","text":" produces."}],"type":"paragraph"}],"name":"elementType"},{"name":"limit","content":[{"inlineContent":[{"type":"text","text":"A Continuation.BufferingPolicy value to set the stream’s buffering behavior. By"},{"text":" ","type":"text"},{"type":"text","text":"default, the stream buffers an unlimited number of elements. You can also set the policy to"},{"text":" ","type":"text"},{"type":"text","text":"buffer a specified number of oldest or newest elements."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AsyncThrowingStream"},{"type":"text","text":"."}]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is handy for immediately escaping the continuation from an async stream, which typically"},{"text":" ","type":"text"},{"type":"text","text":"requires multiple steps:"}]},{"syntax":"swift","type":"codeListing","code":["var _continuation: AsyncThrowingStream<Int, Error>.Continuation!","let stream = AsyncThrowingStream<Int, Error> { continuation = $0 }","let continuation = _continuation!","","\/\/ vs.","","let (stream, continuation) = AsyncThrowingStream<Int, Error>.streamWithContinuation()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This tool is usually used for tests where we need to supply an async sequence to a dependency"},{"type":"text","text":" "},{"type":"text","text":"endpoint and get access to its continuation so that we can emulate the dependency"},{"text":" ","type":"text"},{"type":"text","text":"emitting data. For example, suppose you have a dependency exposing an async sequence for"},{"type":"text","text":" "},{"type":"text","text":"listening to notifications. To test this you can use "},{"type":"codeVoice","code":"streamWithContinuation"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["let notifications = AsyncThrowingStream<Void>.streamWithContinuation()","","let store = TestStore(","  initialState: Feature.State(),","  reducer: Feature()",")","","store.dependencies.notifications = { notifications.stream }","","await store.send(.task)","notifications.continuation.yield(\"Hello\")  \/\/ Simulate a notification being posted","await store.receive(.notification(\"Hello\")) {","  $0.message = \"Hello\"","}"]},{"type":"aside","name":"Warning","style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"⚠️ "},{"type":"codeVoice","code":"AsyncStream"},{"type":"text","text":" does not support multiple subscribers, therefore you can only use"},{"text":" ","type":"text"},{"text":"this helper to test features that do not subscribe multiple times to the dependency","type":"text"},{"text":" ","type":"text"},{"text":"endpoint.","type":"text"}]}]}],"kind":"content"}],"kind":"symbol","metadata":{"title":"streamWithContinuation(_:bufferingPolicy:)","externalID":"s:Scs22ComposableArchitectures5Error_pRs_rlE22streamWithContinuation_15bufferingPolicyScsyxsAB_pG0D0_Scs0F0VyxsAB_p_G12continuationtxm_AH09BufferingH0OyxsAB_p__GtFZ","roleHeading":"Type Method","modules":[{"name":"ComposableArchitecture","relatedModules":["_Concurrency"]}],"role":"symbol","symbolKind":"method","conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"any Error"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"streamWithContinuation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"bufferingPolicy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:Scs12ContinuationV","text":"Continuation"},{"kind":"text","text":"."},{"text":"BufferingPolicy","preciseIdentifier":"s:Scs12ContinuationV15BufferingPolicyO","kind":"typeIdentifier"},{"kind":"text","text":") -> (stream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Scs","text":"AsyncThrowingStream"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">, continuation"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Scs","kind":"typeIdentifier","text":"AsyncThrowingStream"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:Scs12ContinuationV","kind":"typeIdentifier","text":"Continuation"},{"text":")","kind":"text"}],"extendedModule":"_Concurrency"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency\/AsyncThrowingStream"]]},"sections":[],"abstract":[{"type":"text","text":"Constructs and returns a stream along with its backing continuation."}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency\/AsyncThrowingStream\/streamWithContinuation(_:bufferingPolicy:)","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/_Concurrency/AsyncThrowingStream":{"type":"topic","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncThrowingStream","preciseIdentifier":"s:Scs"}],"title":"AsyncThrowingStream","url":"\/documentation\/composablearchitecture\/_concurrency\/asyncthrowingstream","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency\/AsyncThrowingStream","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncThrowingStream"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/_Concurrency/AsyncThrowingStream/streamWithContinuation(_:bufferingPolicy:)":{"url":"\/documentation\/composablearchitecture\/_concurrency\/asyncthrowingstream\/streamwithcontinuation(_:bufferingpolicy:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency\/AsyncThrowingStream\/streamWithContinuation(_:bufferingPolicy:)","abstract":[{"text":"Constructs and returns a stream along with its backing continuation.","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"streamWithContinuation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"bufferingPolicy"},{"text":": ","kind":"text"},{"text":"AsyncThrowingStream","preciseIdentifier":"s:Scs","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:Scs12ContinuationV","text":"Continuation","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Scs12ContinuationV15BufferingPolicyO","text":"BufferingPolicy","kind":"typeIdentifier"},{"kind":"text","text":") -> (stream"},{"text":": ","kind":"text"},{"text":"AsyncThrowingStream","kind":"typeIdentifier","preciseIdentifier":"s:Scs"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"text":"Failure","kind":"typeIdentifier"},{"kind":"text","text":">, continuation"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Scs","text":"AsyncThrowingStream","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Scs12ContinuationV","text":"Continuation"},{"kind":"text","text":")"}],"title":"streamWithContinuation(_:bufferingPolicy:)","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Failure","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"any Error"},{"type":"text","text":"."}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture/_Concurrency":{"type":"topic","url":"\/documentation\/composablearchitecture\/_concurrency","abstract":[],"kind":"symbol","role":"collection","title":"_Concurrency","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency"}}}