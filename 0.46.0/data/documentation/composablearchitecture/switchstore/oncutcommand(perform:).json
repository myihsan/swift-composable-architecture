{"kind":"symbol","metadata":{"modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"externalID":"s:7SwiftUI4ViewPAAE12onCutCommand7performQrSaySo14NSItemProviderCGycSg_tF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","symbolKind":"method","roleHeading":"Instance Method","platforms":[{"unavailable":false,"deprecated":false,"introducedAt":"10.15","beta":false,"name":"macOS"}],"extendedModule":"SwiftUICore","title":"onCutCommand(perform:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onCutCommand","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"perform"},{"text":": (() -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSItemProvider","text":"NSItemProvider"},{"kind":"text","text":"])?) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}]},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/onCutCommand(perform:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.onCutCommand(perform:)","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onCutCommand","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"perform"},{"text":" ","kind":"text"},{"text":"payloadAction","kind":"internalParam"},{"kind":"text","text":": (() -> ["},{"kind":"typeIdentifier","text":"NSItemProvider","preciseIdentifier":"c:objc(cs)NSItemProvider"},{"text":"])?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":"\n"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/switchstore\/oncutcommand(perform:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"type":"topic","title":"View Implementations","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","type":"topic","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftui","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/onCutCommand(perform:)":{"abstract":[],"url":"\/documentation\/composablearchitecture\/switchstore\/oncutcommand(perform:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onCutCommand"},{"kind":"text","text":"("},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": (() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSItemProvider","text":"NSItemProvider"},{"text":"])?) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"title":"onCutCommand(perform:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/onCutCommand(perform:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"title":"SwitchStore","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"type":"topic","abstract":[{"text":"A view that can switch over a store of enum state and handle each case.","type":"text"}],"url":"\/documentation\/composablearchitecture\/switchstore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"role":"symbol"}}}