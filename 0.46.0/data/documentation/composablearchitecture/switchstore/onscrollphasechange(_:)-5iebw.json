{"kind":"symbol","variants":[{"paths":["\/documentation\/composablearchitecture\/switchstore\/onscrollphasechange(_:)-5iebw"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onScrollPhaseChange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"ScrollPhase","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11ScrollPhaseO"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI11ScrollPhaseO","kind":"typeIdentifier","text":"ScrollPhase"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/onScrollPhaseChange(_:)-5iebw"},"metadata":{"roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onScrollPhaseChange","kind":"identifier"},{"text":"((","kind":"text"},{"preciseIdentifier":"s:7SwiftUI11ScrollPhaseO","text":"ScrollPhase","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11ScrollPhaseO","text":"ScrollPhase"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"externalID":"s:7SwiftUI4ViewPAAE19onScrollPhaseChangeyQryAA0eF0O_AFtcF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","title":"onScrollPhaseChange(_:)","extendedModule":"SwiftUICore","platforms":[{"introducedAt":"18.0","deprecated":false,"unavailable":false,"beta":false,"name":"iOS"},{"unavailable":false,"beta":false,"name":"macOS","deprecated":false,"introducedAt":"15.0"},{"name":"tvOS","unavailable":false,"deprecated":false,"introducedAt":"18.0","beta":false},{"beta":false,"deprecated":false,"name":"visionOS","unavailable":false,"introducedAt":"2.0"},{"beta":false,"name":"watchOS","deprecated":false,"unavailable":false,"introducedAt":"11.0"}],"symbolKind":"method","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.onScrollPhaseChange(_:)","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/onScrollPhaseChange(_:)-5iebw":{"title":"onScrollPhaseChange(_:)","url":"\/documentation\/composablearchitecture\/switchstore\/onscrollphasechange(_:)-5iebw","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onScrollPhaseChange","kind":"identifier"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:7SwiftUI11ScrollPhaseO","text":"ScrollPhase","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI11ScrollPhaseO","text":"ScrollPhase","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/onScrollPhaseChange(_:)-5iebw","kind":"symbol","role":"symbol","type":"topic","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"type":"topic","title":"View Implementations","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"title":"SwitchStore","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"type":"topic","abstract":[{"text":"A view that can switch over a store of enum state and handle each case.","type":"text"}],"url":"\/documentation\/composablearchitecture\/switchstore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","type":"topic","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftui","role":"collectionGroup"}}}