{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"underline"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"isActive","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":" = true, ","kind":"text"},{"text":"pattern","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4TextV","kind":"typeIdentifier","text":"Text"},{"text":".","kind":"text"},{"text":"LineStyle","preciseIdentifier":"s:7SwiftUI4TextV9LineStyleV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4TextV9LineStyleV7PatternV","text":"Pattern","kind":"typeIdentifier"},{"kind":"text","text":" = .solid, "},{"text":"color","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Color","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI5ColorV"},{"text":"? = nil) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/underline(_:pattern:color:)"]}],"metadata":{"platforms":[{"deprecated":false,"name":"iOS","unavailable":false,"beta":false,"introducedAt":"16.0"},{"name":"macOS","unavailable":false,"introducedAt":"13.0","deprecated":false,"beta":false},{"introducedAt":"16.0","name":"tvOS","deprecated":false,"unavailable":false,"beta":false},{"name":"watchOS","introducedAt":"9.0","beta":false,"deprecated":false,"unavailable":false}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"underline","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"pattern"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI4TextV","text":"Text","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"LineStyle","preciseIdentifier":"s:7SwiftUI4TextV9LineStyleV"},{"text":".","kind":"text"},{"text":"Pattern","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4TextV9LineStyleV7PatternV"},{"text":", ","kind":"text"},{"text":"color","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Color","preciseIdentifier":"s:7SwiftUI5ColorV"},{"kind":"text","text":"?) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"role":"symbol","extendedModule":"SwiftUICore","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"externalID":"s:7SwiftUI4ViewPAAE9underline_7pattern5colorQrSb_AA4TextV9LineStyleV7PatternVAA5ColorVSgtF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","symbolKind":"method","title":"underline(_:pattern:color:)","roleHeading":"Instance Method"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/underline(_:pattern:color:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"code":"View.underline(_:pattern:color:)","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","type":"topic","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftui","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"title":"SwitchStore","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"type":"topic","abstract":[{"text":"A view that can switch over a store of enum state and handle each case.","type":"text"}],"url":"\/documentation\/composablearchitecture\/switchstore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","title":"View Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/underline(_:pattern:color:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/underline(_:pattern:color:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"underline","kind":"identifier"},{"kind":"text","text":"("},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"pattern","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4TextV","kind":"typeIdentifier","text":"Text"},{"kind":"text","text":"."},{"text":"LineStyle","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4TextV9LineStyleV"},{"text":".","kind":"text"},{"text":"Pattern","preciseIdentifier":"s:7SwiftUI4TextV9LineStyleV7PatternV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"color"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI5ColorV","text":"Color"},{"text":"?) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"abstract":[],"kind":"symbol","type":"topic","title":"underline(_:pattern:color:)","url":"\/documentation\/composablearchitecture\/caselet\/underline(_:pattern:color:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","title":"CaseLet","type":"topic","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CaseLet","kind":"identifier"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"}}}