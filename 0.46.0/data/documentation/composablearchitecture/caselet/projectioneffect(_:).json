{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"projectionEffect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"transform"},{"text":": ","kind":"text"},{"text":"ProjectionTransform","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI19ProjectionTransformV"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/projectioneffect(_:)"]}],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.projectionEffect(_:)","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/projectionEffect(_:)"},"kind":"symbol","metadata":{"title":"projectionEffect(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectionEffect","kind":"identifier"},{"kind":"text","text":"("},{"text":"ProjectionTransform","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI19ProjectionTransformV"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"platforms":[{"introducedAt":"13.0","deprecated":false,"name":"iOS","unavailable":false,"beta":false},{"name":"macOS","unavailable":false,"deprecated":false,"beta":false,"introducedAt":"10.15"},{"introducedAt":"13.0","deprecated":false,"beta":false,"name":"tvOS","unavailable":false},{"beta":false,"deprecated":false,"name":"watchOS","unavailable":false,"introducedAt":"6.0"}],"modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"role":"symbol","externalID":"s:7SwiftUI4ViewPAAE16projectionEffectyQrAA19ProjectionTransformVF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","symbolKind":"method","roleHeading":"Instance Method","extendedModule":"SwiftUICore"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"kind":"article","title":"SwiftUI Integration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","type":"topic","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftui","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","title":"CaseLet","type":"topic","abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CaseLet","kind":"identifier"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"title":"SwitchStore","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"type":"topic","abstract":[{"text":"A view that can switch over a store of enum state and handle each case.","type":"text"}],"url":"\/documentation\/composablearchitecture\/switchstore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/projectionEffect(_:)":{"url":"\/documentation\/composablearchitecture\/caselet\/projectioneffect(_:)","kind":"symbol","title":"projectionEffect(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/projectionEffect(_:)","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectionEffect"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI19ProjectionTransformV","text":"ProjectionTransform"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","title":"View Implementations","role":"collectionGroup"}}}